class SN8Opcode:
	name = ""
	opcode = 0
	datmask = 0x00FF
	
	def __init__(self, _name, _opcode, mask = 0x00FF):
		self.name = _name
		self.opcode = _opcode
		self.datmask = mask

class SN8Chip:
	name = ""
	codes = None
	regs = None
	adv = None
	
	def __init__(self, _name, _codes, _regs, _adv = None):
		self.name = _name
		self.codes = _codes
		self.regs = _regs
		self.adv = _adv
	
	def getRegName(self, val):
		val = val & 0xFF
		if val in self.regs:
			return self.regs[val]
		return "0x{:02X}".format(val)

class SN8Opcode4Addr:
	txt = ""
	opcode = 0
	opmask = 0xFFFF0000
	datmask = 0x0000FFFF
	sz = 4
	
	def __init__(self, _txt, _opcode, _opmask, mask = 0x0000FFFF):
		self.txt = _txt
		self.opcode = _opcode
		self.opmask = _opmask
		self.datmask = mask
	
	def decode(self, value):
		return self.txt.format(value & self.datmask)


SN8P1702A = SN8Chip("SN8P1702A",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C66,	SN8Opcode("DAA_None_None",	0x0C66,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xae,	"P4CON"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P1703A = SN8Chip("SN8P1703A",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C66,	SN8Opcode("DAA_None_None",	0x0C66,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xae,	"P4CON"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P1819A = SN8Chip("SN8P1819A",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C66,	SN8Opcode("DAA_None_None",	0x0C66,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"OPTION"),
		(0x89,	"LCDM1"),
		(0x92,	"PGIACKS"),
		(0x95,	"CPM"),
		(0x96,	"CPCKS"),
		(0x9a,	"PGIAM"),
		(0x9b,	"OPM"),
		(0xae,	"P4CON"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd1,	"P1"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe1,	"P1UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P1829 = SN8Chip("SN8P1829",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C66,	SN8Opcode("DAA_None_None",	0x0C66,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"OPTION"),
		(0x89,	"LCDM1"),
		(0x92,	"PGIACKS"),
		(0x95,	"CPM"),
		(0x96,	"CPCKS"),
		(0x9a,	"PGIAM"),
		(0x9b,	"OPM"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P1917 = SN8Chip("SN8P1917",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C66,	SN8Opcode("DAA_None_None",	0x0C66,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x89,	"LCDM1"),
		(0x90,	"AMPM"),
		(0x91,	"AMPCHS"),
		(0x92,	"AMPCKS"),
		(0x93,	"ADCM"),
		(0x94,	"ADCKS"),
		(0x95,	"CPM"),
		(0x96,	"CPCKS"),
		(0x97,	"DFM"),
		(0x98,	"ADCDL"),
		(0x99,	"ADCDH"),
		(0x9a,	"LBTM"),
		(0xbf,	"PEDGE"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdf,	"STKP"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P1919 = SN8Chip("SN8P1919",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C66,	SN8Opcode("DAA_None_None",	0x0C66,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"OPTION"),
		(0x89,	"LCDM1"),
		(0x90,	"AMPM"),
		(0x91,	"AMPCHS"),
		(0x92,	"AMPCKS"),
		(0x93,	"ADCM"),
		(0x94,	"ADCKS"),
		(0x95,	"CPM"),
		(0x96,	"CPCKS"),
		(0x97,	"DFM"),
		(0x98,	"ADCDL"),
		(0x99,	"ADCDH"),
		(0x9a,	"LBTM"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe6,	"DP0X"),
		(0xe7,	"@YZ"),
		(0xe7,	"DP1X"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P1927 = SN8Chip("SN8P1927",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C66,	SN8Opcode("DAA_None_None",	0x0C66,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x89,	"LCDM1"),
		(0x90,	"AMPM"),
		(0x91,	"AMPCHS"),
		(0x92,	"AMPCKS"),
		(0x93,	"ADCM"),
		(0x94,	"ADCKS"),
		(0x95,	"CPM"),
		(0x96,	"CPCKS"),
		(0x97,	"DFM"),
		(0x98,	"ADCDL"),
		(0x99,	"ADCDH"),
		(0x9a,	"LBTM"),
		(0xa0,	"ROMADRH"),
		(0xa1,	"ROMADRL"),
		(0xa2,	"ROMDAH"),
		(0xa3,	"ROMDAL"),
		(0xa4,	"ROMCNT"),
		(0xbf,	"PEDGE"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdf,	"STKP"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P1929 = SN8Chip("SN8P1929",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C66,	SN8Opcode("DAA_None_None",	0x0C66,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"OPTION"),
		(0x89,	"LCDM1"),
		(0x90,	"AMPM"),
		(0x91,	"AMPCHS"),
		(0x92,	"AMPCKS"),
		(0x93,	"ADCM"),
		(0x94,	"ADCKS"),
		(0x95,	"CPM"),
		(0x96,	"CPCKS"),
		(0x97,	"DFM"),
		(0x98,	"ADCDL"),
		(0x99,	"ADCDH"),
		(0x9a,	"LBTM"),
		(0xa0,	"ROMADRH"),
		(0xa1,	"ROMADRL"),
		(0xa2,	"ROMDAH"),
		(0xa3,	"ROMDAL"),
		(0xa4,	"ROMCNT"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P1937 = SN8Chip("SN8P1937",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C66,	SN8Opcode("DAA_None_None",	0x0C66,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x89,	"LCDM1"),
		(0x8a,	"LCDM2"),
		(0x90,	"AMPM"),
		(0x91,	"AMPCHS"),
		(0x92,	"AMPCKS"),
		(0x93,	"ADCM"),
		(0x94,	"ADCKS"),
		(0x95,	"CPM"),
		(0x96,	"ADCDLL"),
		(0x97,	"DFM"),
		(0x98,	"ADCDL"),
		(0x99,	"ADCDH"),
		(0x9a,	"LBTM"),
		(0xa0,	"ROMADRH"),
		(0xa1,	"ROMADRL"),
		(0xa2,	"ROMDAH"),
		(0xa3,	"ROMDAL"),
		(0xa4,	"ROMCNT"),
		(0xbf,	"PEDGE"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P1989 = SN8Chip("SN8P1989",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C66,	SN8Opcode("DAA_None_None",	0x0C66,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"OPTION"),
		(0x89,	"LCDM1"),
		(0x90,	"AMPM"),
		(0x91,	"AMPCHS"),
		(0x92,	"AMPCKS"),
		(0x93,	"ADC16M"),
		(0x94,	"ADCKS"),
		(0x95,	"REGM"),
		(0x97,	"DFM"),
		(0x98,	"ADCDL"),
		(0x99,	"ADCDH"),
		(0x9a,	"LBTM"),
		(0x9b,	"BZC"),
		(0x9c,	"BZM"),
		(0xb1,	"ADC12M"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P1927A = SN8Chip("SN8P1927A",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C66,	SN8Opcode("DAA_None_None",	0x0C66,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x89,	"LCDM1"),
		(0x90,	"AMPM"),
		(0x91,	"AMPCHS"),
		(0x92,	"AMPCKS"),
		(0x93,	"ADCM"),
		(0x94,	"ADCKS"),
		(0x95,	"CPM"),
		(0x96,	"CPCKS"),
		(0x97,	"DFM"),
		(0x98,	"ADCDL"),
		(0x99,	"ADCDH"),
		(0x9a,	"LBTM"),
		(0xa0,	"ROMADRH"),
		(0xa1,	"ROMADRL"),
		(0xa2,	"ROMDAH"),
		(0xa3,	"ROMDAL"),
		(0xa4,	"ROMCNT"),
		(0xbf,	"PEDGE"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdf,	"STKP"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2212 = SN8Chip("SN8P2212",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xa0,	"UDA"),
		(0xa1,	"USTATUS"),
		(0xa2,	"UCTRL"),
		(0xa3,	"UE0E"),
		(0xa4,	"UE1E"),
		(0xa5,	"UE2E"),
		(0xa6,	"UDP0"),
		(0xa7,	"UDR0"),
		(0xa8,	"UDP1"),
		(0xa9,	"UDR1"),
		(0xaa,	"UPID"),
		(0xab,	"EP1OUT_CNT"),
		(0xac,	"EP2OUT_CNT"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2213 = SN8Chip("SN8P2213",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xa0,	"UDA"),
		(0xa1,	"USTATUS"),
		(0xa2,	"UCTRL"),
		(0xa3,	"UE0R"),
		(0xa4,	"UE1R"),
		(0xa5,	"UE2R"),
		(0xa6,	"UDP0"),
		(0xa7,	"UDR0"),
		(0xa8,	"UDP1"),
		(0xa9,	"UDR1"),
		(0xaa,	"UPID"),
		(0xab,	"EP1OUT_CNT"),
		(0xac,	"EP2OUT_CNT"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2233 = SN8Chip("SN8P2233",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x95,	"EP_NAK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0x99,	"UE3R"),
		(0x9a,	"UE4R"),
		(0x9b,	"UEER"),
		(0x9c,	"EP51N_CNT"),
		(0x9e,	"EP6OUT_CNT_L"),
		(0x9f,	"EP6OUT_CNT_H"),
		(0xa3,	"UDP0_L"),
		(0xa4,	"UDP0_H"),
		(0xa5,	"UDP0_R"),
		(0xa6,	"UDP0_W"),
		(0xa7,	"EP1OUT_CNT"),
		(0xa8,	"EP2OUT_CNT"),
		(0xa9,	"EP3OUT_CNT"),
		(0xaa,	"EP4OUT_CNT"),
		(0xab,	"UPID"),
		(0xac,	"Utoggle"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"T1M"),
		(0xdb,	"T1CL"),
		(0xdc,	"T1CH"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2234 = SN8Chip("SN8P2234",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x95,	"EP_NAK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0x99,	"UE3R"),
		(0x9a,	"UE4R"),
		(0x9b,	"UEER"),
		(0x9c,	"EP51N_CNT"),
		(0x9e,	"EP6OUT_CNT_L"),
		(0x9f,	"EP6OUT_CNT_H"),
		(0xa3,	"UDP0_L"),
		(0xa4,	"UDP0_H"),
		(0xa5,	"UDP0_R"),
		(0xa6,	"UDP0_W"),
		(0xa7,	"EP1OUT_CNT"),
		(0xa8,	"EP2OUT_CNT"),
		(0xa9,	"EP3OUT_CNT"),
		(0xaa,	"EP4OUT_CNT"),
		(0xab,	"UPID"),
		(0xac,	"Utoggle"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"T1M"),
		(0xdb,	"T1CL"),
		(0xdc,	"T1CH"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2236 = SN8Chip("SN8P2236",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x95,	"EP_NAK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0x99,	"UE3R"),
		(0x9a,	"UE4R"),
		(0x9b,	"UEER"),
		(0x9c,	"EP5IN_CNT"),
		(0x9e,	"EP6OUT_CNT_L"),
		(0x9f,	"EP6OUT_CNT_H"),
		(0xa3,	"UDP0_L"),
		(0xa4,	"UDP0_H"),
		(0xa5,	"UDR0_R"),
		(0xa6,	"UDR0_W"),
		(0xa7,	"EP1OUT_CNT"),
		(0xa8,	"EP2OUT_CNT"),
		(0xa9,	"EP3OUT_CNT"),
		(0xaa,	"EP4OUT_CNT"),
		(0xab,	"UPID"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"T1M"),
		(0xdb,	"T1C_L"),
		(0xdc,	"T1C_H"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2238 = SN8Chip("SN8P2238",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x95,	"EP_NAK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0x99,	"UE3R"),
		(0x9a,	"UE4R"),
		(0x9b,	"UEER"),
		(0x9c,	"EP51N_CNT"),
		(0x9e,	"EP6OUT_CNT_L"),
		(0x9f,	"EP6OUT_CNT_H"),
		(0xa3,	"UDP0_L"),
		(0xa4,	"UDP0_H"),
		(0xa5,	"UDP0_R"),
		(0xa6,	"UDP0_W"),
		(0xa7,	"EP1OUT_CNT"),
		(0xa8,	"EP2OUT_CNT"),
		(0xa9,	"EP3OUT_CNT"),
		(0xaa,	"EP4OUT_CNT"),
		(0xab,	"UPID"),
		(0xac,	"Utoggle"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"T1M"),
		(0xdb,	"T1CL"),
		(0xdc,	"T1CH"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P22121 = SN8Chip("SN8P22121",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xa0,	"UDA"),
		(0xa1,	"USTATUS"),
		(0xa2,	"UCTRL"),
		(0xa3,	"UE0E"),
		(0xa4,	"UE1E"),
		(0xa5,	"UE2E"),
		(0xa6,	"UDP0"),
		(0xa7,	"UDR0"),
		(0xa8,	"UDP1"),
		(0xa9,	"UDR1"),
		(0xaa,	"UPID"),
		(0xab,	"EP1OUT_CNT"),
		(0xac,	"EP2OUT_CNT"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2267 = SN8Chip("SN8P2267",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"TC0M"),
		(0x89,	"TC0C"),
		(0x8a,	"TC0R"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0xa3,	"UDP0_L"),
		(0xa4,	"UDP0_H"),
		(0xa5,	"UDR0_R"),
		(0xa6,	"UDR0_W"),
		(0xab,	"UPID"),
		(0xac,	"Utoggle"),
		(0xaf,	"PS2M"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2242 = SN8Chip("SN8P2242",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0xa3,	"UDP0_L"),
		(0xa4,	"UDP0_H"),
		(0xa5,	"UDR0_R"),
		(0xa6,	"UDR0_W"),
		(0xab,	"UPID"),
		(0xac,	"Utoggle"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc1,	"P1M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P22421 = SN8Chip("SN8P22421",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0xa3,	"UDP0_L"),
		(0xa4,	"UDP0_H"),
		(0xa5,	"UDR0_R"),
		(0xa6,	"UDR0_W"),
		(0xab,	"UPID"),
		(0xac,	"UTOGGLE"),
		(0xb0,	"IHRCU"),
		(0xb1,	"IHRCL"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc1,	"P1M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2241 = SN8Chip("SN8P2241",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0xa3,	"UDP0_L"),
		(0xa4,	"UDP0_H"),
		(0xa5,	"UDR0_R"),
		(0xa6,	"UDR0_W"),
		(0xab,	"UPID"),
		(0xac,	"Utoggle"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc1,	"P1M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2267C = SN8Chip("SN8P2267C",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"TC0M"),
		(0x89,	"TC0C"),
		(0x8a,	"TC0R"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0xab,	"UPID"),
		(0xac,	"UTOGGLE"),
		(0xad,	"UNDT_EN"),
		(0xae,	"UNDT"),
		(0xb0,	"EP0_STALL"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd5,	"P5"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"NDT_HW"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SZK671 = SN8Chip("SZK671",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"TC0M"),
		(0x89,	"TC0C"),
		(0x8a,	"TC0R"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0xab,	"UPID"),
		(0xac,	"UTOGGLE"),
		(0xad,	"UNDT_EN"),
		(0xae,	"UNDT"),
		(0xb0,	"EP0_STALL"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd5,	"P5"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"NDT_HW"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2267E = SN8Chip("SN8P2267E",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ"),
		(0x99,	"INTEN"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P5M"),
		(0xa5,	"P0"),
		(0xa6,	"P1"),
		(0xa7,	"P2"),
		(0xa8,	"P3"),
		(0xa9,	"P5"),
		(0xaa,	"P0UR"),
		(0xab,	"P1UR"),
		(0xac,	"P2UR"),
		(0xad,	"P3UR"),
		(0xae,	"P5UR"),
		(0xaf,	"P3DR"),
		(0xb8,	"TC0M"),
		(0xb9,	"TC0C"),
		(0xba,	"TC0R"),
		(0xcc,	"UDA"),
		(0xcd,	"USTATUS"),
		(0xce,	"EP0OUT_CNT"),
		(0xcf,	"USB_INT_EN"),
		(0xd0,	"EP_ACK"),
		(0xd1,	"EP0_STALL"),
		(0xd5,	"UE0R"),
		(0xd7,	"UE1R"),
		(0xd9,	"UE2R"),
		(0xe3,	"UPID"),
		(0xe5,	"IHRC_CTL"),
		(0xe8,	"UTOGGLE"),
		(0xe9,	"UNDT"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SZK671A = SN8Chip("SZK671A",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ"),
		(0x99,	"INTEN"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P5M"),
		(0xa5,	"P0"),
		(0xa6,	"P1"),
		(0xa7,	"P2"),
		(0xa8,	"P3"),
		(0xa9,	"P5"),
		(0xaa,	"P0UR"),
		(0xab,	"P1UR"),
		(0xac,	"P2UR"),
		(0xad,	"P3UR"),
		(0xae,	"P5UR"),
		(0xaf,	"P3DR"),
		(0xb8,	"TC0M"),
		(0xb9,	"TC0C"),
		(0xba,	"TC0R"),
		(0xcc,	"UDA"),
		(0xcd,	"USTATUS"),
		(0xce,	"EP0OUT_CNT"),
		(0xcf,	"USB_INT_EN"),
		(0xd0,	"EP_ACK"),
		(0xd1,	"EP0_STALL"),
		(0xd5,	"UE0R"),
		(0xd7,	"UE1R"),
		(0xd9,	"UE2R"),
		(0xe3,	"UPID"),
		(0xe5,	"IHRC_CTL"),
		(0xe8,	"UTOGGLE"),
		(0xe9,	"UNDT"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F22521B = SN8Chip("SN8F22521B",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"TC0M"),
		(0x89,	"TC0C"),
		(0x8a,	"TC0R"),
		(0x8b,	"TC1M"),
		(0x8c,	"TC1C"),
		(0x8d,	"TC1R"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x95,	"EP_NAK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0x99,	"UE3R"),
		(0xa3,	"UDP0"),
		(0xa5,	"UDR0_R"),
		(0xa6,	"UDR0_W"),
		(0xa7,	"EP1OUT_CNT"),
		(0xa8,	"EP2OUT_CNT"),
		(0xa9,	"EP3OUT_CNT"),
		(0xab,	"UPID"),
		(0xac,	"Utoggle"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xba,	"PECMD"),
		(0xbb,	"PEROML"),
		(0xbc,	"PEROMH"),
		(0xbd,	"PERAML"),
		(0xbe,	"PERAMCNT"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ1"),
		(0xc7,	"INTEN1"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"T1M"),
		(0xdb,	"T1C_L"),
		(0xdc,	"T1C_H"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F2253B = SN8Chip("SN8F2253B",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"TC0M"),
		(0x89,	"TC0C"),
		(0x8a,	"TC0R"),
		(0x8b,	"TC1M"),
		(0x8c,	"TC1C"),
		(0x8d,	"TC1R"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x95,	"EP_NAK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0x99,	"UE3R"),
		(0xa3,	"UDP0"),
		(0xa5,	"UDR0_R"),
		(0xa6,	"UDR0_W"),
		(0xa7,	"EP1OUT_CNT"),
		(0xa8,	"EP2OUT_CNT"),
		(0xa9,	"EP3OUT_CNT"),
		(0xab,	"UPID"),
		(0xac,	"Utoggle"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xba,	"PECMD"),
		(0xbb,	"PEROML"),
		(0xbc,	"PEROMH"),
		(0xbd,	"PERAML"),
		(0xbe,	"PERAMCNT"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ1"),
		(0xc7,	"INTEN1"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"T1M"),
		(0xdb,	"T1C_L"),
		(0xdc,	"T1C_H"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F2255B = SN8Chip("SN8F2255B",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"TC0M"),
		(0x89,	"TC0C"),
		(0x8a,	"TC0R"),
		(0x8b,	"TC1M"),
		(0x8c,	"TC1C"),
		(0x8d,	"TC1R"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x95,	"EP_NAK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0x99,	"UE3R"),
		(0xa3,	"UDP0"),
		(0xa5,	"UDR0_R"),
		(0xa6,	"UDR0_W"),
		(0xa7,	"EP1OUT_CNT"),
		(0xa8,	"EP2OUT_CNT"),
		(0xa9,	"EP3OUT_CNT"),
		(0xab,	"UPID"),
		(0xac,	"Utoggle"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xba,	"PECMD"),
		(0xbb,	"PEROML"),
		(0xbc,	"PEROMH"),
		(0xbd,	"PERAML"),
		(0xbe,	"PERAMCNT"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ1"),
		(0xc7,	"INTEN1"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"T1M"),
		(0xdb,	"T1C_L"),
		(0xdc,	"T1C_H"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F2251B = SN8Chip("SN8F2251B",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"TC0M"),
		(0x89,	"TC0C"),
		(0x8a,	"TC0R"),
		(0x8b,	"TC1M"),
		(0x8c,	"TC1C"),
		(0x8d,	"TC1R"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x95,	"EP_NAK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0x99,	"UE3R"),
		(0xa3,	"UDP0"),
		(0xa5,	"UDR0_R"),
		(0xa6,	"UDR0_W"),
		(0xa7,	"EP1OUT_CNT"),
		(0xa8,	"EP2OUT_CNT"),
		(0xa9,	"EP3OUT_CNT"),
		(0xab,	"UPID"),
		(0xac,	"Utoggle"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xba,	"PECMD"),
		(0xbb,	"PEROML"),
		(0xbc,	"PEROMH"),
		(0xbd,	"PERAML"),
		(0xbe,	"PERAMCNT"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ1"),
		(0xc7,	"INTEN1"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"T1M"),
		(0xdb,	"T1C_L"),
		(0xdc,	"T1C_H"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F22531B = SN8Chip("SN8F22531B",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"TC0M"),
		(0x89,	"TC0C"),
		(0x8a,	"TC0R"),
		(0x8b,	"TC1M"),
		(0x8c,	"TC1C"),
		(0x8d,	"TC1R"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x95,	"EP_NAK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0x99,	"UE3R"),
		(0xa3,	"UDP0"),
		(0xa5,	"UDR0_R"),
		(0xa6,	"UDR0_W"),
		(0xa7,	"EP1OUT_CNT"),
		(0xa8,	"EP2OUT_CNT"),
		(0xa9,	"EP3OUT_CNT"),
		(0xab,	"UPID"),
		(0xac,	"Utoggle"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xba,	"PECMD"),
		(0xbb,	"PEROML"),
		(0xbc,	"PEROMH"),
		(0xbd,	"PERAML"),
		(0xbe,	"PERAMCNT"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ1"),
		(0xc7,	"INTEN1"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"T1M"),
		(0xdb,	"T1C_L"),
		(0xdc,	"T1C_H"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F22511B = SN8Chip("SN8F22511B",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"TC0M"),
		(0x89,	"TC0C"),
		(0x8a,	"TC0R"),
		(0x8b,	"TC1M"),
		(0x8c,	"TC1C"),
		(0x8d,	"TC1R"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x95,	"EP_NAK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0x99,	"UE3R"),
		(0xa3,	"UDP0"),
		(0xa5,	"UDR0_R"),
		(0xa6,	"UDR0_W"),
		(0xa7,	"EP1OUT_CNT"),
		(0xa8,	"EP2OUT_CNT"),
		(0xa9,	"EP3OUT_CNT"),
		(0xab,	"UPID"),
		(0xac,	"Utoggle"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xba,	"PECMD"),
		(0xbb,	"PEROML"),
		(0xbc,	"PEROMH"),
		(0xbd,	"PERAML"),
		(0xbe,	"PERAMCNT"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ1"),
		(0xc7,	"INTEN1"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"T1M"),
		(0xdb,	"T1C_L"),
		(0xdc,	"T1C_H"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F2271B = SN8Chip("SN8F2271B",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"TC0M"),
		(0x89,	"TC0C"),
		(0x8a,	"TC0R"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x95,	"EP_NAK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0xa3,	"UDP0_L"),
		(0xa4,	"UDP0_H"),
		(0xa5,	"UDP0_R"),
		(0xa6,	"UDP0_W"),
		(0xa7,	"EP1OUT_CNT"),
		(0xa8,	"EP2OUT_CNT"),
		(0xab,	"UPID"),
		(0xac,	"Utoggle"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xba,	"PECMD"),
		(0xbb,	"PEROML"),
		(0xbc,	"PEROMH"),
		(0xbd,	"PERAML"),
		(0xbe,	"PERAMCNT"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ1"),
		(0xc7,	"INTEN1"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F22721B = SN8Chip("SN8F22721B",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"TC0M"),
		(0x89,	"TC0C"),
		(0x8a,	"TC0R"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x95,	"EP_NAK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0xa3,	"UDP0_L"),
		(0xa4,	"UDP0_H"),
		(0xa5,	"UDP0_R"),
		(0xa6,	"UDP0_W"),
		(0xa7,	"EP1OUT_CNT"),
		(0xa8,	"EP2OUT_CNT"),
		(0xab,	"UPID"),
		(0xac,	"Utoggle"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xba,	"PECMD"),
		(0xbb,	"PEROML"),
		(0xbc,	"PEROMH"),
		(0xbd,	"PERAML"),
		(0xbe,	"PERAMCNT"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ1"),
		(0xc7,	"INTEN1"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F22711B = SN8Chip("SN8F22711B",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"TC0M"),
		(0x89,	"TC0C"),
		(0x8a,	"TC0R"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x95,	"EP_NAK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0xa3,	"UDP0_L"),
		(0xa4,	"UDP0_H"),
		(0xa5,	"UDP0_R"),
		(0xa6,	"UDP0_W"),
		(0xa7,	"EP1OUT_CNT"),
		(0xa8,	"EP2OUT_CNT"),
		(0xab,	"UPID"),
		(0xac,	"Utoggle"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xba,	"PECMD"),
		(0xbb,	"PEROML"),
		(0xbc,	"PEROMH"),
		(0xbd,	"PERAML"),
		(0xbe,	"PERAMCNT"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ1"),
		(0xc7,	"INTEN1"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F2277B = SN8Chip("SN8F2277B",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"TC0M"),
		(0x89,	"TC0C"),
		(0x8a,	"TC0R"),
		(0x90,	"UDA"),
		(0x91,	"USTATUS"),
		(0x92,	"EP0OUT_CNT"),
		(0x93,	"USB_INT_EN"),
		(0x94,	"EP_ACK"),
		(0x95,	"EP_NAK"),
		(0x96,	"UE0R"),
		(0x97,	"UE1R"),
		(0x98,	"UE2R"),
		(0xa3,	"UDP0_L"),
		(0xa4,	"UDP0_H"),
		(0xa5,	"UDP0_R"),
		(0xa6,	"UDP0_W"),
		(0xa7,	"EP1OUT_CNT"),
		(0xa8,	"EP2OUT_CNT"),
		(0xab,	"UPID"),
		(0xac,	"Utoggle"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xba,	"PECMD"),
		(0xbb,	"PEROML"),
		(0xbc,	"PEROMH"),
		(0xbd,	"PERAML"),
		(0xbe,	"PERAMCNT"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ1"),
		(0xc7,	"INTEN1"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F2288 = SN8Chip("SN8F2288",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"TC0M"),
		(0x89,	"TC0C"),
		(0x8a,	"TC0R"),
		(0x8b,	"TC1M"),
		(0x8c,	"TC1C"),
		(0x8d,	"TC1R"),
		(0x8e,	"TC2M"),
		(0x8f,	"TC2C"),
		(0x90,	"TC2R"),
		(0x91,	"UDA"),
		(0x92,	"USTATUS"),
		(0x93,	"EP0OUT_CNT"),
		(0x94,	"USB_INT_EN"),
		(0x95,	"EP_ACK"),
		(0x96,	"EP_NAK"),
		(0x97,	"UE0R"),
		(0x98,	"UE1R"),
		(0x99,	"UE1R_C"),
		(0x9a,	"UE2R"),
		(0x9b,	"UE2R_C"),
		(0x9c,	"UE3R"),
		(0x9d,	"UE3R_C"),
		(0x9e,	"UE4R"),
		(0x9f,	"UE4R_C"),
		(0xa0,	"EP2FIFO_ADDR"),
		(0xa1,	"EP3FIFO_ADDR"),
		(0xa2,	"EP4FIFO_ADDR"),
		(0xa3,	"UDP0"),
		(0xa5,	"UDR0_R"),
		(0xa6,	"UDR0_W"),
		(0xa7,	"UPID"),
		(0xa8,	"Utoggle"),
		(0xa9,	"URTX"),
		(0xaa,	"URRX"),
		(0xab,	"URBRC"),
		(0xac,	"URTXD1"),
		(0xad,	"URTXD2"),
		(0xae,	"URRXD1"),
		(0xaf,	"URRXD2"),
		(0xb0,	"SIOM"),
		(0xb1,	"SIOR"),
		(0xb2,	"SIOB"),
		(0xb5,	"P0M"),
		(0xb6,	"ADM"),
		(0xb7,	"ADB"),
		(0xb8,	"ADR"),
		(0xb9,	"P4CON"),
		(0xba,	"PECMD"),
		(0xbb,	"PEROML"),
		(0xbc,	"PEROMH"),
		(0xbd,	"PERAML"),
		(0xbe,	"PERAMCNT"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ1"),
		(0xc7,	"INTEN1"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"T1M"),
		(0xdb,	"T1C_L"),
		(0xdc,	"T1C_H"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F2283 = SN8Chip("SN8F2283",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"TC0M"),
		(0x89,	"TC0C"),
		(0x8a,	"TC0R"),
		(0x8b,	"TC1M"),
		(0x8c,	"TC1C"),
		(0x8d,	"TC1R"),
		(0x8e,	"TC2M"),
		(0x8f,	"TC2C"),
		(0x90,	"TC2R"),
		(0x91,	"UDA"),
		(0x92,	"USTATUS"),
		(0x93,	"EP0OUT_CNT"),
		(0x94,	"USB_INT_EN"),
		(0x95,	"EP_ACK"),
		(0x96,	"EP_NAK"),
		(0x97,	"UE0R"),
		(0x98,	"UE1R"),
		(0x99,	"UE1R_C"),
		(0x9a,	"UE2R"),
		(0x9b,	"UE2R_C"),
		(0x9c,	"UE3R"),
		(0x9d,	"UE3R_C"),
		(0x9e,	"UE4R"),
		(0x9f,	"UE4R_C"),
		(0xa0,	"EP2FIFO_ADDR"),
		(0xa1,	"EP3FIFO_ADDR"),
		(0xa2,	"EP4FIFO_ADDR"),
		(0xa3,	"UDP0"),
		(0xa5,	"UDR0_R"),
		(0xa6,	"UDR0_W"),
		(0xa7,	"UPID"),
		(0xa8,	"Utoggle"),
		(0xa9,	"URTX"),
		(0xaa,	"URRX"),
		(0xab,	"URBRC"),
		(0xac,	"URTXD1"),
		(0xad,	"URTXD2"),
		(0xae,	"URRXD1"),
		(0xaf,	"URRXD2"),
		(0xb0,	"SIOM"),
		(0xb1,	"SIOR"),
		(0xb2,	"SIOB"),
		(0xb5,	"P0M"),
		(0xb6,	"ADM"),
		(0xb7,	"ADB"),
		(0xb8,	"ADR"),
		(0xb9,	"P4CON"),
		(0xba,	"PECMD"),
		(0xbb,	"PEROML"),
		(0xbc,	"PEROMH"),
		(0xbd,	"PERAML"),
		(0xbe,	"PERAMCNT"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ1"),
		(0xc7,	"INTEN1"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"T1M"),
		(0xdb,	"T1C_L"),
		(0xdc,	"T1C_H"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F22831 = SN8Chip("SN8F22831",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"TC0M"),
		(0x89,	"TC0C"),
		(0x8a,	"TC0R"),
		(0x8b,	"TC1M"),
		(0x8c,	"TC1C"),
		(0x8d,	"TC1R"),
		(0x8e,	"TC2M"),
		(0x8f,	"TC2C"),
		(0x90,	"TC2R"),
		(0x91,	"UDA"),
		(0x92,	"USTATUS"),
		(0x93,	"EP0OUT_CNT"),
		(0x94,	"USB_INT_EN"),
		(0x95,	"EP_ACK"),
		(0x96,	"EP_NAK"),
		(0x97,	"UE0R"),
		(0x98,	"UE1R"),
		(0x99,	"UE1R_C"),
		(0x9a,	"UE2R"),
		(0x9b,	"UE2R_C"),
		(0x9c,	"UE3R"),
		(0x9d,	"UE3R_C"),
		(0x9e,	"UE4R"),
		(0x9f,	"UE4R_C"),
		(0xa0,	"EP2FIFO_ADDR"),
		(0xa1,	"EP3FIFO_ADDR"),
		(0xa2,	"EP4FIFO_ADDR"),
		(0xa3,	"UDP0"),
		(0xa5,	"UDR0_R"),
		(0xa6,	"UDR0_W"),
		(0xa7,	"UPID"),
		(0xa8,	"UTOGGLE"),
		(0xa9,	"URTX"),
		(0xaa,	"URRX"),
		(0xab,	"URBRC"),
		(0xac,	"URTXD1"),
		(0xad,	"URTXD2"),
		(0xae,	"URRXD1"),
		(0xaf,	"URRXD2"),
		(0xb0,	"SIOM"),
		(0xb1,	"SIOR"),
		(0xb2,	"SIOB"),
		(0xb5,	"P0M"),
		(0xb6,	"ADM"),
		(0xb7,	"ADB"),
		(0xb8,	"ADR"),
		(0xb9,	"P4CON"),
		(0xba,	"PECMD"),
		(0xbb,	"PEROML"),
		(0xbc,	"PEROMH"),
		(0xbd,	"PERAML"),
		(0xbe,	"PERAMCNT"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ1"),
		(0xc7,	"INTEN1"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"T1M"),
		(0xdb,	"T1CL"),
		(0xdc,	"T1CH"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F22E88B = SN8Chip("SN8F22E88B",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"UPLL"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"INTEN0"),
		(0x9a,	"INTEN1"),
		(0x9b,	"P0W"),
		(0x9c,	"P1W"),
		(0x9d,	"P0IE"),
		(0x9e,	"P1IE"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P4M"),
		(0xa4,	"P5M"),
		(0xa5,	"P0"),
		(0xa6,	"P1"),
		(0xa7,	"P2"),
		(0xa8,	"P4"),
		(0xa9,	"P5"),
		(0xaa,	"P0UR"),
		(0xab,	"P1UR"),
		(0xac,	"P2UR"),
		(0xad,	"P4UR"),
		(0xae,	"P5UR"),
		(0xaf,	"PECMD"),
		(0xb0,	"SIOM"),
		(0xb1,	"SIOR"),
		(0xb2,	"SIOB"),
		(0xb3,	"T0M"),
		(0xb4,	"T0C"),
		(0xb5,	"T1M"),
		(0xb6,	"T1C_L"),
		(0xb7,	"T1C_H"),
		(0xb8,	"TC0M"),
		(0xb9,	"TC0C"),
		(0xba,	"TC0R"),
		(0xbb,	"TC0D"),
		(0xbc,	"TC1M"),
		(0xbd,	"TC1C"),
		(0xbe,	"TC1R"),
		(0xbf,	"TC1D"),
		(0xc0,	"TC2M"),
		(0xc1,	"TC2C"),
		(0xc2,	"TC2R"),
		(0xc3,	"TC2D"),
		(0xc4,	"PWCH"),
		(0xc5,	"PWES"),
		(0xc6,	"P2CON"),
		(0xc7,	"P4CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xcc,	"UDA"),
		(0xcd,	"USTATUS"),
		(0xce,	"USTATUS1"),
		(0xcf,	"USB_INT_EN"),
		(0xd0,	"EP_ACK"),
		(0xd1,	"EP_NAK"),
		(0xd2,	"UCFG"),
		(0xd3,	"UEPDIR"),
		(0xd4,	"UEPISO"),
		(0xd5,	"UE0R"),
		(0xd6,	"UE0R_C"),
		(0xd7,	"UE1R"),
		(0xd8,	"UE1R_C"),
		(0xd9,	"UE2R"),
		(0xda,	"UE2R_C"),
		(0xdb,	"UE3R"),
		(0xdc,	"UE3R_C"),
		(0xdd,	"UE4R"),
		(0xde,	"UE4R_C"),
		(0xdf,	"UE5R"),
		(0xe0,	"UE5R_C"),
		(0xe1,	"UE6R"),
		(0xe2,	"UE6R_C"),
		(0xe3,	"UPID"),
		(0xe4,	"UFRMNO_L"),
		(0xe5,	"UFRMNO_H"),
		(0xe6,	"PHYPRM"),
		(0xe8,	"UTOGGLE"),
		(0xe9,	"EP2FIFO_ADDR"),
		(0xea,	"EP3FIFO_ADDR"),
		(0xeb,	"EP4FIFO_ADDR"),
		(0xec,	"EP5FIFO_ADDR"),
		(0xed,	"EP6FIFO_ADDR"),
		(0xee,	"PS2M"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F22E83B = SN8Chip("SN8F22E83B",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"UPLL"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"INTEN0"),
		(0x9a,	"INTEN1"),
		(0x9b,	"P0W"),
		(0x9c,	"P1W"),
		(0x9d,	"P0IE"),
		(0x9e,	"P1IE"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P4M"),
		(0xa4,	"P5M"),
		(0xa5,	"P0"),
		(0xa6,	"P1"),
		(0xa7,	"P2"),
		(0xa8,	"P4"),
		(0xa9,	"P5"),
		(0xaa,	"P0UR"),
		(0xab,	"P1UR"),
		(0xac,	"P2UR"),
		(0xad,	"P4UR"),
		(0xae,	"P5UR"),
		(0xaf,	"PECMD"),
		(0xb0,	"SIOM"),
		(0xb1,	"SIOR"),
		(0xb2,	"SIOB"),
		(0xb3,	"T0M"),
		(0xb4,	"T0C"),
		(0xb5,	"T1M"),
		(0xb6,	"T1C_L"),
		(0xb7,	"T1C_H"),
		(0xb8,	"TC0M"),
		(0xb9,	"TC0C"),
		(0xba,	"TC0R"),
		(0xbb,	"TC0D"),
		(0xbc,	"TC1M"),
		(0xbd,	"TC1C"),
		(0xbe,	"TC1R"),
		(0xbf,	"TC1D"),
		(0xc0,	"TC2M"),
		(0xc1,	"TC2C"),
		(0xc2,	"TC2R"),
		(0xc3,	"TC2D"),
		(0xc4,	"PWCH"),
		(0xc5,	"PWES"),
		(0xc6,	"P2CON"),
		(0xc7,	"P4CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xcc,	"UDA"),
		(0xcd,	"USTATUS"),
		(0xce,	"USTATUS1"),
		(0xcf,	"USB_INT_EN"),
		(0xd0,	"EP_ACK"),
		(0xd1,	"EP_NAK"),
		(0xd2,	"UCFG"),
		(0xd3,	"UEPDIR"),
		(0xd4,	"UEPISO"),
		(0xd5,	"UE0R"),
		(0xd6,	"UE0R_C"),
		(0xd7,	"UE1R"),
		(0xd8,	"UE1R_C"),
		(0xd9,	"UE2R"),
		(0xda,	"UE2R_C"),
		(0xdb,	"UE3R"),
		(0xdc,	"UE3R_C"),
		(0xdd,	"UE4R"),
		(0xde,	"UE4R_C"),
		(0xdf,	"UE5R"),
		(0xe0,	"UE5R_C"),
		(0xe1,	"UE6R"),
		(0xe2,	"UE6R_C"),
		(0xe3,	"UPID"),
		(0xe4,	"UFRMNO_L"),
		(0xe5,	"UFRMNO_H"),
		(0xe6,	"PHYPRM"),
		(0xe8,	"UTOGGLE"),
		(0xe9,	"EP2FIFO_ADDR"),
		(0xea,	"EP3FIFO_ADDR"),
		(0xeb,	"EP4FIFO_ADDR"),
		(0xec,	"EP5FIFO_ADDR"),
		(0xed,	"EP6FIFO_ADDR"),
		(0xee,	"PS2M"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F22E84B = SN8Chip("SN8F22E84B",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"UPLL"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"INTEN0"),
		(0x9a,	"INTEN1"),
		(0x9b,	"P0W"),
		(0x9c,	"P1W"),
		(0x9d,	"P0IE"),
		(0x9e,	"P1IE"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P4M"),
		(0xa4,	"P5M"),
		(0xa5,	"P0"),
		(0xa6,	"P1"),
		(0xa7,	"P2"),
		(0xa8,	"P4"),
		(0xa9,	"P5"),
		(0xaa,	"P0UR"),
		(0xab,	"P1UR"),
		(0xac,	"P2UR"),
		(0xad,	"P4UR"),
		(0xae,	"P5UR"),
		(0xaf,	"PECMD"),
		(0xb0,	"SIOM"),
		(0xb1,	"SIOR"),
		(0xb2,	"SIOB"),
		(0xb3,	"T0M"),
		(0xb4,	"T0C"),
		(0xb5,	"T1M"),
		(0xb6,	"T1C_L"),
		(0xb7,	"T1C_H"),
		(0xb8,	"TC0M"),
		(0xb9,	"TC0C"),
		(0xba,	"TC0R"),
		(0xbb,	"TC0D"),
		(0xbc,	"TC1M"),
		(0xbd,	"TC1C"),
		(0xbe,	"TC1R"),
		(0xbf,	"TC1D"),
		(0xc0,	"TC2M"),
		(0xc1,	"TC2C"),
		(0xc2,	"TC2R"),
		(0xc3,	"TC2D"),
		(0xc4,	"PWCH"),
		(0xc5,	"PWES"),
		(0xc6,	"P2CON"),
		(0xc7,	"P4CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xcc,	"UDA"),
		(0xcd,	"USTATUS"),
		(0xce,	"USTATUS1"),
		(0xcf,	"USB_INT_EN"),
		(0xd0,	"EP_ACK"),
		(0xd1,	"EP_NAK"),
		(0xd2,	"UCFG"),
		(0xd3,	"UEPDIR"),
		(0xd4,	"UEPISO"),
		(0xd5,	"UE0R"),
		(0xd6,	"UE0R_C"),
		(0xd7,	"UE1R"),
		(0xd8,	"UE1R_C"),
		(0xd9,	"UE2R"),
		(0xda,	"UE2R_C"),
		(0xdb,	"UE3R"),
		(0xdc,	"UE3R_C"),
		(0xdd,	"UE4R"),
		(0xde,	"UE4R_C"),
		(0xdf,	"UE5R"),
		(0xe0,	"UE5R_C"),
		(0xe1,	"UE6R"),
		(0xe2,	"UE6R_C"),
		(0xe3,	"UPID"),
		(0xe4,	"UFRMNO_L"),
		(0xe5,	"UFRMNO_H"),
		(0xe6,	"PHYPRM"),
		(0xe8,	"UTOGGLE"),
		(0xe9,	"EP2FIFO_ADDR"),
		(0xea,	"EP3FIFO_ADDR"),
		(0xeb,	"EP4FIFO_ADDR"),
		(0xec,	"EP5FIFO_ADDR"),
		(0xed,	"EP6FIFO_ADDR"),
		(0xee,	"PS2M"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F22E87B = SN8Chip("SN8F22E87B",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"UPLL"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"INTEN0"),
		(0x9a,	"INTEN1"),
		(0x9b,	"P0W"),
		(0x9c,	"P1W"),
		(0x9d,	"P0IE"),
		(0x9e,	"P1IE"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P4M"),
		(0xa4,	"P5M"),
		(0xa5,	"P0"),
		(0xa6,	"P1"),
		(0xa7,	"P2"),
		(0xa8,	"P4"),
		(0xa9,	"P5"),
		(0xaa,	"P0UR"),
		(0xab,	"P1UR"),
		(0xac,	"P2UR"),
		(0xad,	"P4UR"),
		(0xae,	"P5UR"),
		(0xaf,	"PECMD"),
		(0xb0,	"SIOM"),
		(0xb1,	"SIOR"),
		(0xb2,	"SIOB"),
		(0xb3,	"T0M"),
		(0xb4,	"T0C"),
		(0xb5,	"T1M"),
		(0xb6,	"T1C_L"),
		(0xb7,	"T1C_H"),
		(0xb8,	"TC0M"),
		(0xb9,	"TC0C"),
		(0xba,	"TC0R"),
		(0xbb,	"TC0D"),
		(0xbc,	"TC1M"),
		(0xbd,	"TC1C"),
		(0xbe,	"TC1R"),
		(0xbf,	"TC1D"),
		(0xc0,	"TC2M"),
		(0xc1,	"TC2C"),
		(0xc2,	"TC2R"),
		(0xc3,	"TC2D"),
		(0xc4,	"PWCH"),
		(0xc5,	"PWES"),
		(0xc6,	"P2CON"),
		(0xc7,	"P4CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xcc,	"UDA"),
		(0xcd,	"USTATUS"),
		(0xce,	"USTATUS1"),
		(0xcf,	"USB_INT_EN"),
		(0xd0,	"EP_ACK"),
		(0xd1,	"EP_NAK"),
		(0xd2,	"UCFG"),
		(0xd3,	"UEPDIR"),
		(0xd4,	"UEPISO"),
		(0xd5,	"UE0R"),
		(0xd6,	"UE0R_C"),
		(0xd7,	"UE1R"),
		(0xd8,	"UE1R_C"),
		(0xd9,	"UE2R"),
		(0xda,	"UE2R_C"),
		(0xdb,	"UE3R"),
		(0xdc,	"UE3R_C"),
		(0xdd,	"UE4R"),
		(0xde,	"UE4R_C"),
		(0xdf,	"UE5R"),
		(0xe0,	"UE5R_C"),
		(0xe1,	"UE6R"),
		(0xe2,	"UE6R_C"),
		(0xe3,	"UPID"),
		(0xe4,	"UFRMNO_L"),
		(0xe5,	"UFRMNO_H"),
		(0xe6,	"PHYPRM"),
		(0xe8,	"UTOGGLE"),
		(0xe9,	"EP2FIFO_ADDR"),
		(0xea,	"EP3FIFO_ADDR"),
		(0xeb,	"EP4FIFO_ADDR"),
		(0xec,	"EP5FIFO_ADDR"),
		(0xed,	"EP6FIFO_ADDR"),
		(0xee,	"PS2M"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F22E93 = SN8Chip("SN8F22E93",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"P0OC"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa4,	"P4M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xaa,	"P4"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb0,	"P4UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"CSP4SET"),
		(0xb9,	"CSC"),
		(0xba,	"CSP42SET"),
		(0xbb,	"CSP43SET"),
		(0xbc,	"CSP44SET"),
		(0xbd,	"CSP45SET"),
		(0xbe,	"TPDM"),
		(0xbf,	"TPDC"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"LVDT1"),
		(0xc4,	"LVDT2"),
		(0xc6,	"P4CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcc,	"PECMD"),
		(0xcd,	"PEROML"),
		(0xce,	"PEROMH"),
		(0xcf,	"PERAML"),
		(0xd0,	"PERAMCNT"),
		(0xd1,	"SIOM"),
		(0xd2,	"SIOR"),
		(0xd3,	"SIOB"),
		(0xd4,	"SIOC"),
		(0xd5,	"URTX"),
		(0xd6,	"URRX"),
		(0xd7,	"URCR"),
		(0xd8,	"UTXD"),
		(0xd9,	"URXD"),
		(0xda,	"MSPSTAT"),
		(0xdb,	"MSPM1"),
		(0xdc,	"MSPM2"),
		(0xdd,	"MSPBUF"),
		(0xde,	"MSPADR"),
		(0xdf,	"STKP"),
		(0xe0,	"STKFL"),
		(0xe1,	"STKFH"),
		(0xe2,	"STKEL"),
		(0xe3,	"STKEH"),
		(0xe4,	"STKDL"),
		(0xe5,	"STKDH"),
		(0xe6,	"STKCL"),
		(0xe7,	"STKCH"),
		(0xe8,	"STKBL"),
		(0xe9,	"STKBH"),
		(0xea,	"STKAL"),
		(0xeb,	"STKAH"),
		(0xec,	"STK9L"),
		(0xed,	"STK9H"),
		(0xee,	"STK8L"),
		(0xef,	"STK8H"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2308 = SN8Chip("SN8P2308",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x89,	"VLCD"),
		(0xa0,	"T1M"),
		(0xa1,	"T1CL"),
		(0xa2,	"T1CH"),
		(0xa3,	"RFCM"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc3,	"P3M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcb,	"LCDM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd3,	"P3"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe3,	"P3UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2318 = SN8Chip("SN8P2318",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xa0,	"T1M"),
		(0xa1,	"T1CL"),
		(0xa2,	"T1CH"),
		(0xa3,	"T1VCL"),
		(0xa4,	"T1VCH"),
		(0xa5,	"T1CKSM"),
		(0xa6,	"RFCM"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcb,	"LCDM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"TC0D"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2317 = SN8Chip("SN8P2317",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xa0,	"T1M"),
		(0xa1,	"T1CL"),
		(0xa2,	"T1CH"),
		(0xa3,	"T1VCL"),
		(0xa4,	"T1VCH"),
		(0xa5,	"T1CKSM"),
		(0xa6,	"RFCM"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcb,	"LCDM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"TC0D"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2501B = SN8Chip("SN8P2501B",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STk2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STk0L"),
		(0xff,	"STK0H")
		))
)

SN8P2522 = SN8Chip("SN8P2522",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x9c,	"CMP0M"),
		(0x9d,	"CMP0M1"),
		(0xa0,	"T1M"),
		(0xa1,	"T1CL"),
		(0xa2,	"T1CH"),
		(0xa3,	"T1VCL"),
		(0xa4,	"T1VCH"),
		(0xa5,	"T1CKM"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"TC0D"),
		(0xe9,	"P1OC"),
		(0xea,	"TC1D"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2501B1 = SN8Chip("SN8P2501B1",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STk2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STk0L"),
		(0xff,	"STK0H")
		))
)

SN8P2501C = SN8Chip("SN8P2501C",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STk2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STk0L"),
		(0xff,	"STK0H")
		))
)

SN8P2523 = SN8Chip("SN8P2523",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x90,	"MSPSTAT"),
		(0x91,	"MSPM1"),
		(0x92,	"MSPBUF"),
		(0x93,	"MSPADR"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0xa0,	"T1M"),
		(0xa1,	"T1CL"),
		(0xa2,	"T1CH"),
		(0xa3,	"T1VCL"),
		(0xa4,	"T1VCH"),
		(0xa8,	"TC0R0"),
		(0xa9,	"TC0R1"),
		(0xaa,	"TC0R2"),
		(0xab,	"TC0R3"),
		(0xac,	"TC0R4"),
		(0xad,	"TC0R5"),
		(0xae,	"TC0R6"),
		(0xaf,	"TC0R7"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"LPWS"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xea,	"TC1D"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P25231 = SN8Chip("SN8P25231",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x90,	"MSPSTAT"),
		(0x91,	"MSPM1"),
		(0x92,	"MSPBUF"),
		(0x93,	"MSPADR"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0xa0,	"T1M"),
		(0xa1,	"T1CL"),
		(0xa2,	"T1CH"),
		(0xa3,	"T1VCL"),
		(0xa4,	"T1VCH"),
		(0xa8,	"TC0R0"),
		(0xa9,	"TC0R1"),
		(0xaa,	"TC0R2"),
		(0xab,	"TC0R3"),
		(0xac,	"TC0R4"),
		(0xad,	"TC0R5"),
		(0xae,	"TC0R6"),
		(0xaf,	"TC0R7"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"LPWS"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xea,	"TC1D"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2524 = SN8Chip("SN8P2524",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x90,	"MSPSTAT"),
		(0x91,	"MSPM1"),
		(0x92,	"MSPBUF"),
		(0x93,	"MSPADR"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0xa0,	"T1M"),
		(0xa1,	"T1CL"),
		(0xa2,	"T1CH"),
		(0xa3,	"T1VCL"),
		(0xa4,	"T1VCH"),
		(0xa8,	"TC0R0"),
		(0xa9,	"TC0R1"),
		(0xaa,	"TC0R2"),
		(0xab,	"TC0R3"),
		(0xac,	"TC0R4"),
		(0xad,	"TC0R5"),
		(0xae,	"TC0R6"),
		(0xaf,	"TC0R7"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"LPWS"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xea,	"TC1D"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2511 = SN8Chip("SN8P2511",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2501D = SN8Chip("SN8P2501D",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F25E28 = SN8Chip("SN8F25E28",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xd3,	"CM0M3"),
		(0xd4,	"CM0M4"),
		(0xd5,	"CM0M5"),
		(0xd6,	"CM0M6"),
		(0xd7,	"CM0M7"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F25E28L = SN8Chip("SN8F25E28L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xd3,	"CM0M3"),
		(0xd4,	"CM0M4"),
		(0xd5,	"CM0M5"),
		(0xd6,	"CM0M6"),
		(0xd7,	"CM0M7"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F25E25 = SN8Chip("SN8F25E25",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F25E25L = SN8Chip("SN8F25E25L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F25E24 = SN8Chip("SN8F25E24",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F25E24L = SN8Chip("SN8F25E24L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F25E27 = SN8Chip("SN8F25E27",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xd3,	"CM0M3"),
		(0xd4,	"CM0M4"),
		(0xd5,	"CM0M5"),
		(0xd6,	"CM0M6"),
		(0xd7,	"CM0M7"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F25E27L = SN8Chip("SN8F25E27L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xd3,	"CM0M3"),
		(0xd4,	"CM0M4"),
		(0xd5,	"CM0M5"),
		(0xd6,	"CM0M6"),
		(0xd7,	"CM0M7"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2602B = SN8Chip("SN8P2602B",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2604A = SN8Chip("SN8P2604A",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2608 = SN8Chip("SN8P2608",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_2X_None_None",	0x0C00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2611 = SN8Chip("SN8P2611",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK3L"),
		(0xff,	"STk3H")
		))
)

SN8P2612 = SN8Chip("SN8P2612",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK3L"),
		(0xff,	"STk3H")
		))
)

SN8P2613 = SN8Chip("SN8P2613",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK3L"),
		(0xff,	"STk3H")
		))
)

SN8P2614 = SN8Chip("SN8P2614",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STk6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STk3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8A2617 = SN8Chip("SN8A2617",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2624 = SN8Chip("SN8P2624",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P26L321 = SN8Chip("SN8P26L321",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x9c,	"CMP0M"),
		(0x9d,	"CMP1M"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"TC0D"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P26L32 = SN8Chip("SN8P26L32",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x9c,	"CMP0M"),
		(0x9d,	"CMP1M"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"TC0D"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P26L34 = SN8Chip("SN8P26L34",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x9c,	"CMP0M"),
		(0x9d,	"CMP1M"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"TC0D"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P26L38 = SN8Chip("SN8P26L38",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x9c,	"CMP0M"),
		(0x9d,	"CMP1M"),
		(0xa0,	"T1M"),
		(0xa1,	"T1CL"),
		(0xa2,	"T1CH"),
		(0xa4,	"URTX"),
		(0xa5,	"URRX"),
		(0xa6,	"URBRC"),
		(0xa7,	"URTXD1"),
		(0xa8,	"URTXD2"),
		(0xa9,	"URRXD1"),
		(0xaa,	"URRXD2"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"IRR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"IRM"),
		(0xdb,	"IRC"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"IRD"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P26042A = SN8Chip("SN8P26042A",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf0,	"STK6L"),
		(0xf1,	"STK6H"),
		(0xf0,	"STK5L"),
		(0xf1,	"STK5H"),
		(0xf0,	"STK4L"),
		(0xf1,	"STK4H"),
		(0xf0,	"STK3L"),
		(0xf1,	"STK3H"),
		(0xf0,	"STK2L"),
		(0xf1,	"STK2H"),
		(0xf0,	"STK1L"),
		(0xf1,	"STK1H"),
		(0xf0,	"STK0L"),
		(0xf1,	"STK0H")
		))
)

SN8P2602C = SN8Chip("SN8P2602C",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"BZM"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"P5DR"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P26L31 = SN8Chip("SN8P26L31",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x9c,	"CMP0M"),
		(0x9d,	"CMP1M"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"TC0D"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P26L37 = SN8Chip("SN8P26L37",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x9c,	"CMP0M"),
		(0x9d,	"CMP1M"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"TC0D"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2623 = SN8Chip("SN8P2623",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd6,	"P5DR"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"PWMM"),
		(0xe7,	"@YZ"),
		(0xe8,	"TC0D"),
		(0xe9,	"TC1D"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E61 = SN8Chip("SN8F26E61",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E61L = SN8Chip("SN8F26E61L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E611 = SN8Chip("SN8F26E611",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E611L = SN8Chip("SN8F26E611L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E65 = SN8Chip("SN8F26E65",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E65L = SN8Chip("SN8F26E65L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E64 = SN8Chip("SN8F26E64",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E64L = SN8Chip("SN8F26E64L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E68 = SN8Chip("SN8F26E68",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E68L = SN8Chip("SN8F26E68L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E67 = SN8Chip("SN8F26E67",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E67L = SN8Chip("SN8F26E67L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E681 = SN8Chip("SN8F26E681",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E681L = SN8Chip("SN8F26E681L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2704A = SN8Chip("SN8P2704A",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x5000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x5800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST_NoE6E7",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x7000,	SN8Opcode("BTS0_BITX_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("BTS1_BITX_RD_None",	0x7800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_2X_None_None",	0x0C00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW_No80FF",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xae,	"P4CON"),
		(0xb0,	"DAM"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2705A = SN8Chip("SN8P2705A",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x5000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x5800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST_NoE6E7",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x7000,	SN8Opcode("BTS0_BITX_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("BTS1_BITX_RD_None",	0x7800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_2X_None_None",	0x0C00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW_No80FF",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xae,	"P4CON"),
		(0xb0,	"DAM"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2706A = SN8Chip("SN8P2706A",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x5000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x5800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST_NoE6E7",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x7000,	SN8Opcode("BTS0_BITX_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("BTS1_BITX_RD_None",	0x7800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_2X_None_None",	0x0C00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW_No80FF",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xae,	"P4CON"),
		(0xb0,	"DAM"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2707A = SN8Chip("SN8P2707A",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x5000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x5800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST_NoE6E7",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x7000,	SN8Opcode("BTS0_BITX_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("BTS1_BITX_RD_None",	0x7800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_2X_None_None",	0x0C00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW_No80FF",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xae,	"P4CON"),
		(0xb0,	"DAM"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2708A = SN8Chip("SN8P2708A",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x5000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x5800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST_NoE6E7",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x7000,	SN8Opcode("BTS0_BITX_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("BTS1_BITX_RD_None",	0x7800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_2X_None_None",	0x0C00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW_No80FF",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xae,	"P4CON"),
		(0xb0,	"DAM"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe6,	"DP0X"),
		(0xe7,	"@YZ"),
		(0xe7,	"DP1X"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2711 = SN8Chip("SN8P2711",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xae,	"P4CON"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2714 = SN8Chip("SN8P2714",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_2X_None_None",	0x0C00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xae,	"P4CON"),
		(0xb0,	"DAM"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xbf,	"PEDGE"),
		(0xc2,	"P2M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe2,	"P2UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P27142 = SN8Chip("SN8P27142",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_2X_None_None",	0x0C00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xae,	"P4CON"),
		(0xb0,	"DAM"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xbf,	"PEDGE"),
		(0xc2,	"P2M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe2,	"P2UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P27143 = SN8Chip("SN8P27143",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_2X_None_None",	0x0C00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xae,	"P4CON"),
		(0xb0,	"DAM"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xbf,	"PEDGE"),
		(0xc2,	"P2M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe2,	"P2UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2715 = SN8Chip("SN8P2715",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_2X_None_None",	0x0C00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xae,	"P4CON"),
		(0xb0,	"DAM"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xbf,	"PEDGE"),
		(0xc2,	"P2M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe2,	"P2UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2722 = SN8Chip("SN8P2722",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xaf,	"P4CON"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"BZM"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2711A = SN8Chip("SN8P2711A",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xae,	"P4CON"),
		(0xaf,	"VERFH"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2735 = SN8Chip("SN8P2735",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x90,	"PW1NM"),
		(0x93,	"PW1M"),
		(0x94,	"PW2M"),
		(0x95,	"PW2CHS"),
		(0x96,	"PW1RH"),
		(0x97,	"PW1RL"),
		(0x98,	"PW2RH"),
		(0x99,	"PW2RL"),
		(0x9c,	"CMP0M"),
		(0x9d,	"CMP1M"),
		(0x9e,	"CMP2M"),
		(0x9f,	"OPM"),
		(0xa0,	"T1M"),
		(0xa1,	"T1CL"),
		(0xa2,	"T1CH"),
		(0xae,	"P4CON"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"ADT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2758 = SN8Chip("SN8P2758",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x90,	"MSPSTAT"),
		(0x91,	"MSPM1"),
		(0x92,	"MSPM2"),
		(0x93,	"MSPBUF"),
		(0x94,	"MSPADR"),
		(0xae,	"P4CON"),
		(0xb0,	"DAM"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ_1"),
		(0xc7,	"INTEN_1"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2732 = SN8Chip("SN8P2732",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x90,	"PW1NM"),
		(0x93,	"PW1M"),
		(0x94,	"PW2M"),
		(0x95,	"PW2CHS"),
		(0x96,	"PW1RH"),
		(0x97,	"PW1RL"),
		(0x98,	"PW2RH"),
		(0x99,	"PW2RL"),
		(0x9c,	"CMP0M"),
		(0x9d,	"CMP1M"),
		(0x9e,	"CMP2M"),
		(0x9f,	"OPM"),
		(0xa0,	"T1M"),
		(0xa1,	"T1CL"),
		(0xa2,	"T1CH"),
		(0xae,	"P4CON"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"ADT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2733 = SN8Chip("SN8P2733",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x90,	"PW1NM"),
		(0x93,	"PW1M"),
		(0x94,	"PW2M"),
		(0x95,	"PW2CHS"),
		(0x96,	"PW1RH"),
		(0x97,	"PW1RL"),
		(0x98,	"PW2RH"),
		(0x99,	"PW2RL"),
		(0x9c,	"CMP0M"),
		(0x9d,	"CMP1M"),
		(0x9e,	"CMP2M"),
		(0x9f,	"OPM"),
		(0xa0,	"T1M"),
		(0xa1,	"T1CL"),
		(0xa2,	"T1CH"),
		(0xae,	"P4CON"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"ADT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2734 = SN8Chip("SN8P2734",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x90,	"PW1NM"),
		(0x93,	"PW1M"),
		(0x94,	"PW2M"),
		(0x95,	"PW2CHS"),
		(0x96,	"PW1RH"),
		(0x97,	"PW1RL"),
		(0x98,	"PW2RH"),
		(0x99,	"PW2RL"),
		(0x9c,	"CMP0M"),
		(0x9d,	"CMP1M"),
		(0x9e,	"CMP2M"),
		(0x9f,	"OPM"),
		(0xa0,	"T1M"),
		(0xa1,	"T1CL"),
		(0xa2,	"T1CH"),
		(0xae,	"P4CON"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"ADT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2754 = SN8Chip("SN8P2754",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x90,	"MSPSTAT"),
		(0x91,	"MSPM1"),
		(0x92,	"MSPM2"),
		(0x93,	"MSPBUF"),
		(0x94,	"MSPADR"),
		(0xae,	"P4CON"),
		(0xb0,	"DAM"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ_1"),
		(0xc7,	"INTEN_1"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2755 = SN8Chip("SN8P2755",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x90,	"MSPSTAT"),
		(0x91,	"MSPM1"),
		(0x92,	"MSPM2"),
		(0x93,	"MSPBUF"),
		(0x94,	"MSPADR"),
		(0xae,	"P4CON"),
		(0xb0,	"DAM"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ_1"),
		(0xc7,	"INTEN_1"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2742 = SN8Chip("SN8P2742",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x9a,	"CMDB0"),
		(0x9b,	"CMDB1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM1M"),
		(0x9e,	"CM2M"),
		(0x9f,	"OPM"),
		(0xae,	"P4CON"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"ADT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc4,	"P4M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd4,	"P4"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"BZM"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"TC0D"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2743 = SN8Chip("SN8P2743",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x9a,	"CMDB0"),
		(0x9b,	"CMDB1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM1M"),
		(0x9e,	"CM2M"),
		(0x9f,	"OPM"),
		(0xae,	"P4CON"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"ADT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc4,	"P4M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd4,	"P4"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"BZM"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"TC0D"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2712 = SN8Chip("SN8P2712",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xa0,	"TC2M"),
		(0xa1,	"TC2C"),
		(0xa2,	"TC2R"),
		(0xa3,	"TC3M"),
		(0xa4,	"TC3C"),
		(0xa5,	"TC3R"),
		(0xae,	"P4CON"),
		(0xaf,	"P0CON"),
		(0xb0,	"VREFH"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"ADT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc4,	"P4M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd4,	"P4"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe4,	"P4UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P27411 = SN8Chip("SN8P27411",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x9a,	"CMDB0"),
		(0x9b,	"CMDB1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM1M"),
		(0x9e,	"CM2M"),
		(0x9f,	"OPM"),
		(0xae,	"P4CON"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"ADT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc4,	"P4M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd4,	"P4"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"BZM"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"TC0D"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2708B = SN8Chip("SN8P2708B",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST_NoE6E7",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x7000,	SN8Opcode("BTS0_BITX_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("BTS1_BITX_RD_None",	0x7800,	0x07FF)),
		(0x0C00,	SN8Opcode("DAA_2X_None_None",	0x0C00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW_No80FF",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x5000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x5800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xae,	"P4CON"),
		(0xb0,	"DAM"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe6,	"DP0X"),
		(0xe7,	"@YZ"),
		(0xe7,	"DP1X"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2704B = SN8Chip("SN8P2704B",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST_NoE6E7",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x7000,	SN8Opcode("BTS0_BITX_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("BTS1_BITX_RD_None",	0x7800,	0x07FF)),
		(0x0C00,	SN8Opcode("DAA_2X_None_None",	0x0C00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW_No80FF",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x5000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x5800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xae,	"P4CON"),
		(0xb0,	"DAM"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe3,	"P3UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe6,	"DP0X"),
		(0xe7,	"@YZ"),
		(0xe7,	"DP1X"),
		(0xe9,	"P1OC"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2711B = SN8Chip("SN8P2711B",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xae,	"P4CON"),
		(0xaf,	"VREFH"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"ADT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2711A2 = SN8Chip("SN8P2711A2",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xae,	"P4CON"),
		(0xaf,	"VREFH"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P27122 = SN8Chip("SN8P27122",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xa0,	"TC2M"),
		(0xa1,	"TC2C"),
		(0xa2,	"TC2R"),
		(0xa3,	"TC3M"),
		(0xa4,	"TC3C"),
		(0xa5,	"TC3R"),
		(0xae,	"P4CON"),
		(0xaf,	"P0CON"),
		(0xb0,	"VREFH"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"ADT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc4,	"P4M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd4,	"P4"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe4,	"P4UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2723 = SN8Chip("SN8P2723",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xa0,	"TC1M"),
		(0xa1,	"TC1C"),
		(0xa2,	"TC1R"),
		(0xa3,	"TC1D"),
		(0xa4,	"TC2M"),
		(0xa5,	"TC2C"),
		(0xa6,	"TC2R"),
		(0xa7,	"TC2D"),
		(0xa8,	"TC3M"),
		(0xa9,	"TC3C"),
		(0xaa,	"TC3R"),
		(0xab,	"TC3D"),
		(0xac,	"PWCH"),
		(0xae,	"P4CON"),
		(0xaf,	"P1CON"),
		(0xb0,	"VREFH"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"ADT"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc4,	"P4M"),
		(0xc6,	"INTRQ1"),
		(0xc7,	"INTEN1"),
		(0xc8,	"INTRQ0"),
		(0xc9,	"INTEN0"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd6,	"P1DR"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC0R"),
		(0xdd,	"TC0D"),
		(0xde,	"PWES"),
		(0xdf,	"STKP"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe4,	"P4UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2722A = SN8Chip("SN8P2722A",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xaf,	"P4CON"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"BZM"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2741A = SN8Chip("SN8P2741A",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x99,	"CMDB0"),
		(0x9a,	"CMDB1"),
		(0x9b,	"CMDB2"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM1M"),
		(0x9e,	"CM2M"),
		(0x9f,	"OPM"),
		(0xa0,	"T1M"),
		(0xa1,	"T1C"),
		(0xa2,	"T1R"),
		(0xa3,	"T2M"),
		(0xa4,	"T2C"),
		(0xa5,	"T2R"),
		(0xae,	"P4CON"),
		(0xaf,	"CMCON"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"ADT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc4,	"P4M"),
		(0xc8,	"INTRQ0"),
		(0xc9,	"INTEN0"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd4,	"P4"),
		(0xd6,	"INTRQ1"),
		(0xd7,	"INTEN1"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"BZM"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe4,	"P4UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"TC0D"),
		(0xe9,	"URTX"),
		(0xea,	"URRX"),
		(0xeb,	"URCR"),
		(0xec,	"UTXD"),
		(0xed,	"URXD"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P27411A = SN8Chip("SN8P27411A",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x99,	"CMDB0"),
		(0x9a,	"CMDB1"),
		(0x9b,	"CMDB2"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM1M"),
		(0x9e,	"CM2M"),
		(0x9f,	"OPM"),
		(0xa0,	"T1M"),
		(0xa1,	"T1C"),
		(0xa2,	"T1R"),
		(0xa3,	"T2M"),
		(0xa4,	"T2C"),
		(0xa5,	"T2R"),
		(0xae,	"P4CON"),
		(0xaf,	"CMCON"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"ADT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc4,	"P4M"),
		(0xc8,	"INTRQ0"),
		(0xc9,	"INTEN0"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd4,	"P4"),
		(0xd6,	"INTRQ1"),
		(0xd7,	"INTEN1"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"BZM"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe4,	"P4UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"TC0D"),
		(0xe9,	"URTX"),
		(0xea,	"URRX"),
		(0xeb,	"URCR"),
		(0xec,	"UTXD"),
		(0xed,	"URXD"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P27412A = SN8Chip("SN8P27412A",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x99,	"CMDB0"),
		(0x9a,	"CMDB1"),
		(0x9b,	"CMDB2"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM1M"),
		(0x9e,	"CM2M"),
		(0x9f,	"OPM"),
		(0xa0,	"T1M"),
		(0xa1,	"T1C"),
		(0xa2,	"T1R"),
		(0xa3,	"T2M"),
		(0xa4,	"T2C"),
		(0xa5,	"T2R"),
		(0xae,	"P4CON"),
		(0xaf,	"CMCON"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"ADT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc4,	"P4M"),
		(0xc8,	"INTRQ0"),
		(0xc9,	"INTEN0"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd4,	"P4"),
		(0xd6,	"INTRQ1"),
		(0xd7,	"INTEN1"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"BZM"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe4,	"P4UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"TC0D"),
		(0xe9,	"URTX"),
		(0xea,	"URRX"),
		(0xeb,	"URCR"),
		(0xec,	"UTXD"),
		(0xed,	"URXD"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P27L11B = SN8Chip("SN8P27L11B",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xae,	"P4CON"),
		(0xaf,	"VREFH"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"ADT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe7,	"@YZ"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2761 = SN8Chip("SN8P2761",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x9c,	"CM0M"),
		(0xa0,	"PW1M"),
		(0xa1,	"PWCH"),
		(0xa2,	"PW1YL"),
		(0xa3,	"PW1YH"),
		(0xa4,	"PW1BL"),
		(0xa5,	"PW1BH"),
		(0xa6,	"PW1DL"),
		(0xa7,	"PW1DH"),
		(0xa8,	"PW1A"),
		(0xaf,	"P1CON"),
		(0xb0,	"VREFH"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"ADT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd6,	"P0DR"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe7,	"@YZ"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E65 = SN8Chip("SN8F27E65",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"P0OC"),
		(0x9d,	"P1OC"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xc6,	"P4CON"),
		(0xc7,	"P5CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xde,	"PEROMH"),
		(0xdf,	"PERAML"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"URTX"),
		(0xe4,	"URRX"),
		(0xe5,	"URBRC"),
		(0xe6,	"URTXD1"),
		(0xe7,	"URTXD2"),
		(0xe8,	"URRXD1"),
		(0xe9,	"URRXD2"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E65L = SN8Chip("SN8F27E65L",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"P0OC"),
		(0x9d,	"P1OC"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xc6,	"P4CON"),
		(0xc7,	"P5CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xde,	"PEROMH"),
		(0xdf,	"PERAML"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"URTX"),
		(0xe4,	"URRX"),
		(0xe5,	"URBRC"),
		(0xe6,	"URTXD1"),
		(0xe7,	"URTXD2"),
		(0xe8,	"URRXD1"),
		(0xe9,	"URRXD2"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E62 = SN8Chip("SN8F27E62",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"P0OC"),
		(0x9d,	"P1OC"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xc6,	"P4CON"),
		(0xc7,	"P5CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xde,	"PEROMH"),
		(0xdf,	"PERAML"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"URTX"),
		(0xe4,	"URRX"),
		(0xe5,	"URBRC"),
		(0xe6,	"URTXD1"),
		(0xe7,	"URTXD2"),
		(0xe8,	"URRXD1"),
		(0xe9,	"URRXD2"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E62L = SN8Chip("SN8F27E62L",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"P0OC"),
		(0x9d,	"P1OC"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xc6,	"P4CON"),
		(0xc7,	"P5CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xde,	"PEROMH"),
		(0xdf,	"PERAML"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"URTX"),
		(0xe4,	"URRX"),
		(0xe5,	"URBRC"),
		(0xe6,	"URTXD1"),
		(0xe7,	"URTXD2"),
		(0xe8,	"URRXD1"),
		(0xe9,	"URRXD2"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E64 = SN8Chip("SN8F27E64",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"P0OC"),
		(0x9d,	"P1OC"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xc6,	"P4CON"),
		(0xc7,	"P5CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xde,	"PEROMH"),
		(0xdf,	"PERAML"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"URTX"),
		(0xe4,	"URRX"),
		(0xe5,	"URBRC"),
		(0xe6,	"URTXD1"),
		(0xe7,	"URTXD2"),
		(0xe8,	"URRXD1"),
		(0xe9,	"URRXD2"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E64L = SN8Chip("SN8F27E64L",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"P0OC"),
		(0x9d,	"P1OC"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xc6,	"P4CON"),
		(0xc7,	"P5CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xde,	"PEROMH"),
		(0xdf,	"PERAML"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"URTX"),
		(0xe4,	"URRX"),
		(0xe5,	"URBRC"),
		(0xe6,	"URTXD1"),
		(0xe7,	"URTXD2"),
		(0xe8,	"URRXD1"),
		(0xe9,	"URRXD2"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E93 = SN8Chip("SN8F27E93",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"P0OC"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa4,	"P4M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xaa,	"P4"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb0,	"P4UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb9,	"ADM2"),
		(0xba,	"AIN2M"),
		(0xbb,	"AIN3M"),
		(0xbc,	"AIN4M"),
		(0xbd,	"AIN5M"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc6,	"P4CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcc,	"PECMD"),
		(0xcd,	"PEROML"),
		(0xce,	"PEROMH"),
		(0xcf,	"PERAML"),
		(0xd0,	"PERAMCNT"),
		(0xd1,	"SIOM"),
		(0xd2,	"SIOR"),
		(0xd3,	"SIOB"),
		(0xd4,	"SIOC"),
		(0xd5,	"URTX"),
		(0xd6,	"URRX"),
		(0xd7,	"URCR"),
		(0xd8,	"UTXD"),
		(0xd9,	"URXD"),
		(0xda,	"MSPSTAT"),
		(0xdb,	"MSPM1"),
		(0xdc,	"MSPM2"),
		(0xdd,	"MSPBUF"),
		(0xde,	"MSPADR"),
		(0xdf,	"STKP"),
		(0xe0,	"STKFL"),
		(0xe1,	"STKFH"),
		(0xe2,	"STKEL"),
		(0xe3,	"STKEH"),
		(0xe4,	"STKDL"),
		(0xe5,	"STKDH"),
		(0xe6,	"STKCL"),
		(0xe7,	"STKCH"),
		(0xe8,	"STKBL"),
		(0xe9,	"STKBH"),
		(0xea,	"STKAL"),
		(0xeb,	"STKAH"),
		(0xec,	"STK9L"),
		(0xed,	"STK9H"),
		(0xee,	"STK8L"),
		(0xef,	"STK8H"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E93L = SN8Chip("SN8F27E93L",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"P0OC"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa4,	"P4M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xaa,	"P4"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb0,	"P4UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb9,	"ADM2"),
		(0xba,	"AIN2M"),
		(0xbb,	"AIN3M"),
		(0xbc,	"AIN4M"),
		(0xbd,	"AIN5M"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc6,	"P4CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcc,	"PECMD"),
		(0xcd,	"PEROML"),
		(0xce,	"PEROMH"),
		(0xcf,	"PERAML"),
		(0xd0,	"PERAMCNT"),
		(0xd1,	"SIOM"),
		(0xd2,	"SIOR"),
		(0xd3,	"SIOB"),
		(0xd4,	"SIOC"),
		(0xd5,	"URTX"),
		(0xd6,	"URRX"),
		(0xd7,	"URCR"),
		(0xd8,	"UTXD"),
		(0xd9,	"URXD"),
		(0xda,	"MSPSTAT"),
		(0xdb,	"MSPM1"),
		(0xdc,	"MSPM2"),
		(0xdd,	"MSPBUF"),
		(0xde,	"MSPADR"),
		(0xdf,	"STKP"),
		(0xe0,	"STKFL"),
		(0xe1,	"STKFH"),
		(0xe2,	"STKEL"),
		(0xe3,	"STKEH"),
		(0xe4,	"STKDL"),
		(0xe5,	"STKDH"),
		(0xe6,	"STKCL"),
		(0xe7,	"STKCH"),
		(0xe8,	"STKBL"),
		(0xe9,	"STKBH"),
		(0xea,	"STKAL"),
		(0xeb,	"STKAH"),
		(0xec,	"STK9L"),
		(0xed,	"STK9H"),
		(0xee,	"STK8L"),
		(0xef,	"STK8H"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E94 = SN8Chip("SN8F27E94",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"P0OC"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa4,	"P4M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xaa,	"P4"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb0,	"P4UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb9,	"ADM2"),
		(0xba,	"AIN2M"),
		(0xbb,	"AIN3M"),
		(0xbc,	"AIN4M"),
		(0xbd,	"AIN5M"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc6,	"P4CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcc,	"PECMD"),
		(0xcd,	"PEROML"),
		(0xce,	"PEROMH"),
		(0xcf,	"PERAML"),
		(0xd0,	"PERAMCNT"),
		(0xd1,	"SIOM"),
		(0xd2,	"SIOR"),
		(0xd3,	"SIOB"),
		(0xd4,	"SIOC"),
		(0xd5,	"URTX"),
		(0xd6,	"URRX"),
		(0xd7,	"URCR"),
		(0xd8,	"UTXD"),
		(0xd9,	"URXD"),
		(0xda,	"MSPSTAT"),
		(0xdb,	"MSPM1"),
		(0xdc,	"MSPM2"),
		(0xdd,	"MSPBUF"),
		(0xde,	"MSPADR"),
		(0xdf,	"STKP"),
		(0xe0,	"STKFL"),
		(0xe1,	"STKFH"),
		(0xe2,	"STKEL"),
		(0xe3,	"STKEH"),
		(0xe4,	"STKDL"),
		(0xe5,	"STKDH"),
		(0xe6,	"STKCL"),
		(0xe7,	"STKCH"),
		(0xe8,	"STKBL"),
		(0xe9,	"STKBH"),
		(0xea,	"STKAL"),
		(0xeb,	"STKAH"),
		(0xec,	"STK9L"),
		(0xed,	"STK9H"),
		(0xee,	"STK8L"),
		(0xef,	"STK8H"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E94L = SN8Chip("SN8F27E94L",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"P0OC"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa4,	"P4M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xaa,	"P4"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb0,	"P4UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb9,	"ADM2"),
		(0xba,	"AIN2M"),
		(0xbb,	"AIN3M"),
		(0xbc,	"AIN4M"),
		(0xbd,	"AIN5M"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc6,	"P4CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcc,	"PECMD"),
		(0xcd,	"PEROML"),
		(0xce,	"PEROMH"),
		(0xcf,	"PERAML"),
		(0xd0,	"PERAMCNT"),
		(0xd1,	"SIOM"),
		(0xd2,	"SIOR"),
		(0xd3,	"SIOB"),
		(0xd4,	"SIOC"),
		(0xd5,	"URTX"),
		(0xd6,	"URRX"),
		(0xd7,	"URCR"),
		(0xd8,	"UTXD"),
		(0xd9,	"URXD"),
		(0xda,	"MSPSTAT"),
		(0xdb,	"MSPM1"),
		(0xdc,	"MSPM2"),
		(0xdd,	"MSPBUF"),
		(0xde,	"MSPADR"),
		(0xdf,	"STKP"),
		(0xe0,	"STKFL"),
		(0xe1,	"STKFH"),
		(0xe2,	"STKEL"),
		(0xe3,	"STKEH"),
		(0xe4,	"STKDL"),
		(0xe5,	"STKDH"),
		(0xe6,	"STKCL"),
		(0xe7,	"STKCH"),
		(0xe8,	"STKBL"),
		(0xe9,	"STKBH"),
		(0xea,	"STKAL"),
		(0xeb,	"STKAH"),
		(0xec,	"STK9L"),
		(0xed,	"STK9H"),
		(0xee,	"STK8L"),
		(0xef,	"STK8H"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E61 = SN8Chip("SN8F27E61",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc6,	"P1CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xcc,	"VREFH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E61L = SN8Chip("SN8F27E61L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc6,	"P1CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xcc,	"VREFH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E611 = SN8Chip("SN8F27E611",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc6,	"P1CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xcc,	"VREFH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E611L = SN8Chip("SN8F27E611L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc6,	"P1CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xcc,	"VREFH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E23 = SN8Chip("SN8F27E23",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa4,	"P4M"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xaa,	"P4"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb0,	"P4UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc6,	"P4CON"),
		(0xc7,	"P1CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xcc,	"VREFH"),
		(0xd0,	"TC3M"),
		(0xd1,	"TC3C"),
		(0xd2,	"TC3R"),
		(0xd3,	"TC3D"),
		(0xd4,	"PWCH"),
		(0xd5,	"PWES"),
		(0xd7,	"P1DR"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E23L = SN8Chip("SN8F27E23L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa4,	"P4M"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xaa,	"P4"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb0,	"P4UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc6,	"P4CON"),
		(0xc7,	"P1CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xcc,	"VREFH"),
		(0xd0,	"TC3M"),
		(0xd1,	"TC3C"),
		(0xd2,	"TC3R"),
		(0xd3,	"TC3D"),
		(0xd4,	"PWCH"),
		(0xd5,	"PWES"),
		(0xd7,	"P1DR"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2808 = SN8Chip("SN8P2808",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_2X_None_None",	0x0C00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xae,	"P4CON"),
		(0xaf,	"VREFH"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcb,	"LCDM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2807 = SN8Chip("SN8P2807",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_2X_None_None",	0x0C00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xae,	"P4CON"),
		(0xaf,	"VREFH"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcb,	"LCDM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2839 = SN8Chip("SN8P2839",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x89,	"LCDM"),
		(0x8a,	"CPM"),
		(0x8b,	"CPCKS"),
		(0x8c,	"CALIHRCH"),
		(0x8d,	"CALIHRCL"),
		(0x8e,	"TRIM2"),
		(0x8f,	"TRIM1"),
		(0x90,	"STK15L"),
		(0x91,	"STK15H"),
		(0x92,	"STK14L"),
		(0x93,	"STK14H"),
		(0x94,	"STK13L"),
		(0x95,	"STK13H"),
		(0x96,	"STK12L"),
		(0x97,	"STK12H"),
		(0x98,	"STK11L"),
		(0x99,	"STK11H"),
		(0x9a,	"STK10L"),
		(0x9b,	"STK10H"),
		(0x9c,	"STK9L"),
		(0x9d,	"STK9H"),
		(0x9e,	"STK8L"),
		(0x9f,	"STK8H"),
		(0xa0,	"STK7L"),
		(0xa1,	"STK7H"),
		(0xa2,	"STK6L"),
		(0xa3,	"STK6H"),
		(0xa4,	"STK5L"),
		(0xa5,	"STK5H"),
		(0xa6,	"STK4L"),
		(0xa7,	"STK4H"),
		(0xa8,	"STK3L"),
		(0xa9,	"STK3H"),
		(0xaa,	"STK2L"),
		(0xab,	"STK2H"),
		(0xac,	"STK1L"),
		(0xad,	"STK1H"),
		(0xae,	"STK0L"),
		(0xaf,	"STK0H"),
		(0xb1,	"ADM"),
		(0xb2,	"ADB"),
		(0xb3,	"ADR"),
		(0xb4,	"SIOM"),
		(0xb5,	"SIOR"),
		(0xb6,	"SIOB"),
		(0xb8,	"P0M"),
		(0xb9,	"PGIA2CKS"),
		(0xba,	"PGIA2M"),
		(0xbb,	"PGIA1CKS"),
		(0xbc,	"PGIA1M"),
		(0xbd,	"OPM"),
		(0xbe,	"P4CON"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc4,	"P4M"),
		(0xc5,	"P5M"),
		(0xc6,	"INTRQ1"),
		(0xc7,	"INTEN1"),
		(0xc8,	"INTRQ0"),
		(0xc9,	"INTEN0"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd4,	"P4"),
		(0xd5,	"P5"),
		(0xd6,	"T1M"),
		(0xd7,	"T1C"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe4,	"P4UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe9,	"P1OC"),
		(0xea,	"T2M"),
		(0xeb,	"T2CL"),
		(0xec,	"T2CH"),
		(0xed,	"CPT2M"),
		(0xee,	"CPT2CL"),
		(0xef,	"CPT2CH"),
		(0xf0,	"URRX"),
		(0xf1,	"URTX"),
		(0xf2,	"URCR"),
		(0xf3,	"UTXD"),
		(0xf4,	"URXD"),
		(0xf5,	"INTRQ2"),
		(0xf6,	"INTEN2"),
		(0xf7,	"DAM"),
		(0xf8,	"DABL"),
		(0xf9,	"DABH"),
		(0xfa,	"T3M"),
		(0xfb,	"T3CL"),
		(0xfc,	"T3CH"),
		(0xfd,	"CPT3M"),
		(0xfe,	"CPT3CL"),
		(0xff,	"CPT3CH")
		)),list((
		SN8Opcode4Addr("CALLHL", 		0x3C000000, 0xFFFFFFFF, 0x00000000),
		SN8Opcode4Addr("CALLYZ", 		0x3D000000, 0xFFFFFFFF, 0x00000000),
		SN8Opcode4Addr("CALL 0x{:04X}", 0xC0000000, 0xFFFF0000, 0x0000FFFF),
		SN8Opcode4Addr("JMP 0x{:04X}",	0x80000000, 0xFFFF0000, 0x0000FFFF)
		))
)

SN8P2947 = SN8Chip("SN8P2947",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0100,	SN8Opcode("ROMWRT_None_None",	0x0100,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x89,	"LCDM1"),
		(0x8a,	"LCDM2"),
		(0x90,	"VREG"),
		(0x91,	"AMPM1"),
		(0x92,	"AMPM2"),
		(0x93,	"ADCM1"),
		(0x94,	"ADCM2"),
		(0x95,	"LBTM"),
		(0x96,	"ADCDH"),
		(0x97,	"ADCDM"),
		(0x98,	"ADCDL"),
		(0xa0,	"ROMADRH"),
		(0xa1,	"ROMADRL"),
		(0xa2,	"ROMDAH"),
		(0xa3,	"ROMDAL"),
		(0xa4,	"ROMCNT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc1,	"P1M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xdf,	"STKP"),
		(0xe1,	"P1UR"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2949 = SN8Chip("SN8P2949",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0100,	SN8Opcode("ROMWRT_None_None",	0x0100,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x89,	"LCDM1"),
		(0x8a,	"LCDM2"),
		(0x90,	"VREG"),
		(0x91,	"AMPM1"),
		(0x92,	"AMPM2"),
		(0x93,	"ADCM1"),
		(0x94,	"ADCM2"),
		(0x95,	"ADCM3"),
		(0x96,	"LBTM"),
		(0x97,	"ADCDH"),
		(0x98,	"ADCDM"),
		(0x99,	"ADCDL"),
		(0x9a,	"LEDCPM"),
		(0xa0,	"ROMADRH"),
		(0xa1,	"ROMADRL"),
		(0xa2,	"ROMDAH"),
		(0xa3,	"ROMDAL"),
		(0xa4,	"ROMCNT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC1M"),
		(0xdd,	"TC1C"),
		(0xde,	"TC1R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2929 = SN8Chip("SN8P2929",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0100,	SN8Opcode("ROMWRT_None_None",	0x0100,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x89,	"LCDM1"),
		(0x8a,	"LCDM2"),
		(0x8b,	"LCDM3"),
		(0x90,	"VREG"),
		(0x91,	"AMPM1"),
		(0x92,	"AMPM2"),
		(0x93,	"ADCM1"),
		(0x94,	"ADCM2"),
		(0x95,	"ADCM3"),
		(0x96,	"LBTM"),
		(0x97,	"ADCDH"),
		(0x98,	"ADCDM"),
		(0x99,	"ADCDL"),
		(0x9a,	"LEDCPM"),
		(0xa0,	"ROMADRH"),
		(0xa1,	"ROMADRL"),
		(0xa2,	"ROMDAH"),
		(0xa3,	"ROMDAL"),
		(0xa4,	"ROMCNT"),
		(0xb0,	"T1M"),
		(0xb1,	"T1CL"),
		(0xb2,	"T1CH"),
		(0xb3,	"T1VCL"),
		(0xb4,	"T1VCH"),
		(0xb5,	"T1RL"),
		(0xb6,	"T1RH"),
		(0xb8,	"P0M"),
		(0xb9,	"CM0M"),
		(0xba,	"CM0M1"),
		(0xbb,	"CM0M2"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P0W"),
		(0xc2,	"P2M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd2,	"P2"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe2,	"P2UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2967 = SN8Chip("SN8P2967",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0100,	SN8Opcode("ROMWRT_None_None",	0x0100,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x89,	"LCDM1"),
		(0x8a,	"LCDM2"),
		(0x90,	"VREG"),
		(0x91,	"AMPM1"),
		(0x92,	"AMPM2"),
		(0x93,	"ADCM1"),
		(0x94,	"ADCM2"),
		(0x95,	"LBTM"),
		(0x96,	"ADCDH"),
		(0x97,	"ADCDM"),
		(0x98,	"ADCDL"),
		(0xa0,	"ROMADRH"),
		(0xa1,	"ROMADRL"),
		(0xa2,	"ROMDAH"),
		(0xa3,	"ROMDAL"),
		(0xa4,	"ROMCNT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc1,	"P1M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC0R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"URTX"),
		(0xe3,	"URRX"),
		(0xe4,	"URCR"),
		(0xe5,	"UTXD"),
		(0xe6,	"URXD"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2962 = SN8Chip("SN8P2962",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0100,	SN8Opcode("ROMWRT_None_None",	0x0100,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x89,	"LCDM1"),
		(0x8a,	"LCDM2"),
		(0x90,	"VREG"),
		(0x91,	"AMPM1"),
		(0x92,	"AMPM2"),
		(0x93,	"ADCM1"),
		(0x94,	"ADCM2"),
		(0x95,	"LBTM"),
		(0x96,	"ADCDH"),
		(0x97,	"ADCDM"),
		(0x98,	"ADCDL"),
		(0xa0,	"ROMADRH"),
		(0xa1,	"ROMADRL"),
		(0xa2,	"ROMDAH"),
		(0xa3,	"ROMDAL"),
		(0xa4,	"ROMCNT"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc1,	"P1M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC0R"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"URTX"),
		(0xe3,	"URRX"),
		(0xe4,	"URCR"),
		(0xe5,	"UTXD"),
		(0xe6,	"URXD"),
		(0xe7,	"@YZ"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P2977 = SN8Chip("SN8P2977",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0100,	SN8Opcode("ROMWRT_None_None",	0x0100,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x89,	"LCDM1"),
		(0x8a,	"LCDM2"),
		(0x8b,	"P2SEG"),
		(0x8c,	"P3SEG"),
		(0x8d,	"BZRM"),
		(0x90,	"VREG"),
		(0x91,	"CHS"),
		(0x92,	"AMPM"),
		(0x93,	"ADCM1"),
		(0x94,	"ADCM2"),
		(0x95,	"LBTM"),
		(0x96,	"ADCDH"),
		(0x97,	"ADCDM"),
		(0x98,	"ADCDL"),
		(0xa0,	"ROMADRH"),
		(0xa1,	"ROMADRL"),
		(0xa2,	"ROMDAH"),
		(0xa3,	"ROMDAL"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc1,	"P1M"),
		(0xc2,	"P2M"),
		(0xc3,	"P3M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd2,	"P2"),
		(0xd3,	"P3"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdc,	"TC0R"),
		(0xdd,	"P2UR"),
		(0xde,	"P3UR"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe2,	"URTX"),
		(0xe3,	"URRX"),
		(0xe4,	"URCR"),
		(0xe5,	"UTXD"),
		(0xe6,	"URXD"),
		(0xe7,	"@YZ"),
		(0xe8,	"@HL"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F29E39 = SN8Chip("SN8F29E39",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"VREG"),
		(0x91,	"CHS"),
		(0x92,	"ADCM1"),
		(0x93,	"ADCM2"),
		(0x94,	"ADCM3"),
		(0x95,	"LBTM"),
		(0x96,	"LEDM"),
		(0x97,	"DAM"),
		(0x98,	"DABH"),
		(0x99,	"DABL"),
		(0x9a,	"OPM1"),
		(0x9b,	"OPM2"),
		(0x9c,	"ADCDH"),
		(0x9d,	"ADCDM"),
		(0x9e,	"ADCDL"),
		(0x9f,	"AMPM"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P3M"),
		(0xa3,	"P5M"),
		(0xa4,	"P0UR"),
		(0xa5,	"P1UR"),
		(0xa6,	"P3UR"),
		(0xa7,	"P5UR"),
		(0xa8,	"P0"),
		(0xa9,	"P1"),
		(0xaa,	"P3"),
		(0xab,	"P5"),
		(0xac,	"P1W"),
		(0xad,	"LCDM1"),
		(0xae,	"LCDM2"),
		(0xaf,	"P2"),
		(0xb0,	"INTEN0"),
		(0xb1,	"INTEN1"),
		(0xb2,	"INTRQ0"),
		(0xb3,	"INTRQ1"),
		(0xb4,	"P2UR"),
		(0xb5,	"P2M"),
		(0xb6,	"OSCM"),
		(0xb7,	"WDTR"),
		(0xb8,	"PCH"),
		(0xb9,	"PCL"),
		(0xba,	"STKP"),
		(0xbb,	"PEDGE"),
		(0xbc,	"@HL"),
		(0xbd,	"@YZ"),
		(0xbe,	"SEC"),
		(0xbf,	"MIN"),
		(0xc0,	"T0M"),
		(0xc1,	"T0C"),
		(0xc2,	"TC0M"),
		(0xc3,	"TC0RL"),
		(0xc4,	"TC0RH"),
		(0xc5,	"TC0CL"),
		(0xc6,	"TC0CH"),
		(0xc7,	"TC0DL"),
		(0xc8,	"TC0DH"),
		(0xc9,	"TC1M"),
		(0xca,	"TC1RL"),
		(0xcb,	"TC1RH"),
		(0xcc,	"TC1CL"),
		(0xcd,	"TC1CH"),
		(0xce,	"TC1DL"),
		(0xcf,	"TC1DH"),
		(0xd0,	"MSPSTAT"),
		(0xd1,	"MSPM1"),
		(0xd2,	"MSPM2"),
		(0xd3,	"MSPBUF"),
		(0xd4,	"MSPADR"),
		(0xd5,	"URTX"),
		(0xd6,	"URRX"),
		(0xd7,	"URCR"),
		(0xd8,	"UTXD"),
		(0xd9,	"URXD"),
		(0xda,	"PECMD"),
		(0xdb,	"PEROML"),
		(0xdc,	"PEROMH"),
		(0xdd,	"PERAML"),
		(0xde,	"PERAMH"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"STK0L"),
		(0xe1,	"STK0H"),
		(0xe2,	"STK1L"),
		(0xe3,	"STK1H"),
		(0xe4,	"STK2L"),
		(0xe5,	"STK2H"),
		(0xe6,	"STK3L"),
		(0xe7,	"STK3H"),
		(0xe8,	"STK4L"),
		(0xe9,	"STK4H"),
		(0xea,	"STK5L"),
		(0xeb,	"STK5H"),
		(0xec,	"STK6L"),
		(0xed,	"STK6H"),
		(0xee,	"STK7L"),
		(0xef,	"STK7H"),
		(0xf0,	"STK8L"),
		(0xf1,	"STK8H"),
		(0xf2,	"STK9L"),
		(0xf3,	"STK9H"),
		(0xf4,	"STK10L"),
		(0xf5,	"STK10H"),
		(0xf6,	"STK11L"),
		(0xf7,	"STK11H"),
		(0xf8,	"STK12L"),
		(0xf9,	"STK12H"),
		(0xfa,	"STK13L"),
		(0xfb,	"STK13H"),
		(0xfc,	"STK14L"),
		(0xfd,	"STK14H"),
		(0xfe,	"STK15L"),
		(0xff,	"STK15H")
		)),list((
		SN8Opcode4Addr("CALL 0x{:04X}", 0xC0000000, 0xFFFF0000, 0x0000FFFF),
		SN8Opcode4Addr("JMP 0x{:04X}",	0x80000000, 0xFFFF0000, 0x0000FFFF)
		))
)

SN8F29E38 = SN8Chip("SN8F29E38",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"VREG"),
		(0x91,	"CHS"),
		(0x92,	"ADCM1"),
		(0x93,	"ADCM2"),
		(0x94,	"ADCM3"),
		(0x95,	"LBTM"),
		(0x96,	"LEDM"),
		(0x97,	"DAM"),
		(0x98,	"DABH"),
		(0x99,	"DABL"),
		(0x9a,	"OPM1"),
		(0x9b,	"OPM2"),
		(0x9c,	"ADCDH"),
		(0x9d,	"ADCDM"),
		(0x9e,	"ADCDL"),
		(0x9f,	"AMPM"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P3M"),
		(0xa3,	"P5M"),
		(0xa4,	"P0UR"),
		(0xa5,	"P1UR"),
		(0xa6,	"P3UR"),
		(0xa7,	"P5UR"),
		(0xa8,	"P0"),
		(0xa9,	"P1"),
		(0xaa,	"P3"),
		(0xab,	"P5"),
		(0xac,	"P1W"),
		(0xad,	"LCDM1"),
		(0xae,	"LCDM2"),
		(0xaf,	"P2"),
		(0xb0,	"INTEN0"),
		(0xb1,	"INTEN1"),
		(0xb2,	"INTRQ0"),
		(0xb3,	"INTRQ1"),
		(0xb4,	"P2UR"),
		(0xb5,	"P2M"),
		(0xb6,	"OSCM"),
		(0xb7,	"WDTR"),
		(0xb8,	"PCH"),
		(0xb9,	"PCL"),
		(0xba,	"STKP"),
		(0xbb,	"PEDGE"),
		(0xbc,	"@HL"),
		(0xbd,	"@YZ"),
		(0xbe,	"SEC"),
		(0xbf,	"MIN"),
		(0xc0,	"T0M"),
		(0xc1,	"T0C"),
		(0xc2,	"TC0M"),
		(0xc3,	"TC0RL"),
		(0xc4,	"TC0RH"),
		(0xc5,	"TC0CL"),
		(0xc6,	"TC0CH"),
		(0xc7,	"TC0DL"),
		(0xc8,	"TC0DH"),
		(0xc9,	"TC1M"),
		(0xca,	"TC1RL"),
		(0xcb,	"TC1RH"),
		(0xcc,	"TC1CL"),
		(0xcd,	"TC1CH"),
		(0xce,	"TC1DL"),
		(0xcf,	"TC1DH"),
		(0xd0,	"MSPSTAT"),
		(0xd1,	"MSPM1"),
		(0xd2,	"MSPM2"),
		(0xd3,	"MSPBUF"),
		(0xd4,	"MSPADR"),
		(0xd5,	"URTX"),
		(0xd6,	"URRX"),
		(0xd7,	"URCR"),
		(0xd8,	"UTXD"),
		(0xd9,	"URXD"),
		(0xda,	"PECMD"),
		(0xdb,	"PEROML"),
		(0xdc,	"PEROMH"),
		(0xdd,	"PERAML"),
		(0xde,	"PERAMH"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"STK0L"),
		(0xe1,	"STK0H"),
		(0xe2,	"STK1L"),
		(0xe3,	"STK1H"),
		(0xe4,	"STK2L"),
		(0xe5,	"STK2H"),
		(0xe6,	"STK3L"),
		(0xe7,	"STK3H"),
		(0xe8,	"STK4L"),
		(0xe9,	"STK4H"),
		(0xea,	"STK5L"),
		(0xeb,	"STK5H"),
		(0xec,	"STK6L"),
		(0xed,	"STK6H"),
		(0xee,	"STK7L"),
		(0xef,	"STK7H"),
		(0xf0,	"STK8L"),
		(0xf1,	"STK8H"),
		(0xf2,	"STK9L"),
		(0xf3,	"STK9H"),
		(0xf4,	"STK10L"),
		(0xf5,	"STK10H"),
		(0xf6,	"STK11L"),
		(0xf7,	"STK11H"),
		(0xf8,	"STK12L"),
		(0xf9,	"STK12H"),
		(0xfa,	"STK13L"),
		(0xfb,	"STK13H"),
		(0xfc,	"STK14L"),
		(0xfd,	"STK14H"),
		(0xfe,	"STK15L"),
		(0xff,	"STK15H")
		)),list((
		SN8Opcode4Addr("CALL 0x{:04X}", 0xC0000000, 0xFFFF0000, 0x0000FFFF),
		SN8Opcode4Addr("JMP 0x{:04X}",	0x80000000, 0xFFFF0000, 0x0000FFFF)
		))
)

SN8F27E65EN = SN8Chip("SN8F27E65EN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"P0OC"),
		(0x9d,	"P1OC"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xc6,	"P4CON"),
		(0xc7,	"P5CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E65LEN = SN8Chip("SN8F27E65LEN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"P0OC"),
		(0x9d,	"P1OC"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xc6,	"P4CON"),
		(0xc7,	"P5CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E61EN = SN8Chip("SN8F27E61EN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc6,	"P1CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xcc,	"VREFH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E61LEN = SN8Chip("SN8F27E61LEN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc6,	"P1CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xcc,	"VREFH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E64EN = SN8Chip("SN8F27E64EN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"P0OC"),
		(0x9d,	"P1OC"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xc6,	"P4CON"),
		(0xc7,	"P5CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E64LEN = SN8Chip("SN8F27E64LEN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"P0OC"),
		(0x9d,	"P1OC"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xc6,	"P4CON"),
		(0xc7,	"P5CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E611EN = SN8Chip("SN8F27E611EN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc6,	"P1CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xcc,	"VREFH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F27E611LEN = SN8Chip("SN8F27E611LEN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc6,	"P1CON"),
		(0xc8,	"ADM"),
		(0xc9,	"ADB"),
		(0xca,	"ADR"),
		(0xcb,	"ADT"),
		(0xcc,	"VREFH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E61EN = SN8Chip("SN8F26E61EN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E61LEN = SN8Chip("SN8F26E61LEN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E65EN = SN8Chip("SN8F26E65EN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E65LEN = SN8Chip("SN8F26E65LEN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E68EN = SN8Chip("SN8F26E68EN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E68LEN = SN8Chip("SN8F26E68LEN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E611EN = SN8Chip("SN8F26E611EN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E611LEN = SN8Chip("SN8F26E611LEN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"P1W"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc3,	"CPTM"),
		(0xc4,	"CPTCL"),
		(0xc5,	"CPTCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe3,	"SIOC"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E681EN = SN8Chip("SN8F26E681EN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8F26E681LEN = SN8Chip("SN8F26E681LEN",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8DW100 = SN8Chip("SN8DW100",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"VREG"),
		(0x92,	"ADCM1"),
		(0x93,	"ADCM2"),
		(0x94,	"ADCM3"),
		(0x95,	"LBTM"),
		(0x96,	"CHS1"),
		(0x97,	"CHS2"),
		(0x9c,	"ADCDH"),
		(0x9d,	"ADCDM"),
		(0x9e,	"ADCDL"),
		(0x9f,	"AMPM"),
		(0xa0,	"P0M"),
		(0xa4,	"P0UR"),
		(0xa8,	"P0"),
		(0xb0,	"INTEN"),
		(0xb2,	"INTRQ"),
		(0xb6,	"OSCM"),
		(0xb7,	"WDTR"),
		(0xb8,	"PCH"),
		(0xb9,	"PCL"),
		(0xba,	"STKP"),
		(0xbb,	"PEDGE"),
		(0xbc,	"@HL"),
		(0xbd,	"@YZ"),
		(0xc0,	"T0M"),
		(0xc1,	"T0C"),
		(0xd0,	"MSPSTAT"),
		(0xd1,	"MSPM1"),
		(0xd2,	"MSPM2"),
		(0xd3,	"MSPBUF"),
		(0xd4,	"MSPADR"),
		(0xd5,	"SIOM"),
		(0xd6,	"SIOR"),
		(0xd7,	"SIOB"),
		(0xda,	"PECMD"),
		(0xdb,	"PEROML"),
		(0xdc,	"PEROMH"),
		(0xdd,	"PERAML"),
		(0xde,	"PERAMH"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"STK0L"),
		(0xe1,	"STK0H"),
		(0xe2,	"STK1L"),
		(0xe3,	"STK1H"),
		(0xe4,	"STK2L"),
		(0xe5,	"STK2H"),
		(0xe6,	"STK3L"),
		(0xe7,	"STK3H"),
		(0xe8,	"STK4L"),
		(0xe9,	"STK4H"),
		(0xea,	"STK5L"),
		(0xeb,	"STK5H"),
		(0xec,	"STK6L"),
		(0xed,	"STK6H"),
		(0xee,	"STK7L"),
		(0xef,	"STK7H"),
		(0xf0,	"STK8L"),
		(0xf1,	"STK8H"),
		(0xf2,	"STK9L"),
		(0xf3,	"STK9H"),
		(0xf4,	"STK10L"),
		(0xf5,	"STK10H"),
		(0xf6,	"STK11L"),
		(0xf7,	"STK11H"),
		(0xf8,	"STK12L"),
		(0xf9,	"STK12H"),
		(0xfa,	"STK13L"),
		(0xfb,	"STK13H"),
		(0xfc,	"STK14L"),
		(0xfd,	"STK14H"),
		(0xfe,	"STK15L"),
		(0xff,	"STK15H")
		))
)

SN8PC22 = SN8Chip("SN8PC22",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"TC0R"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"TC0M"),
		(0xdb,	"TC0C"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"TC0D"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8PC20 = SN8Chip("SN8PC20",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"IRR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"IRM"),
		(0xdb,	"IRC"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"IRD"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8PC2014 = SN8Chip("SN8PC2014",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"IRR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"IRM"),
		(0xdb,	"IRC"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"IRD"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8PC2016 = SN8Chip("SN8PC2016",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"IRR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"IRM"),
		(0xdb,	"IRC"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"IRD"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8PC21A = SN8Chip("SN8PC21A",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP_None_None",	0x0500,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("PUSH_None_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x86,	"PFLAG"),
		(0xb8,	"P0M"),
		(0xbf,	"PEDGE"),
		(0xc0,	"P1W"),
		(0xc1,	"P1M"),
		(0xc5,	"P5M"),
		(0xc8,	"INTRQ"),
		(0xc9,	"INTEN"),
		(0xca,	"OSCM"),
		(0xcc,	"WDTR"),
		(0xcd,	"IRR"),
		(0xce,	"PCL"),
		(0xcf,	"PCH"),
		(0xd0,	"P0"),
		(0xd1,	"P1"),
		(0xd5,	"P5"),
		(0xd8,	"T0M"),
		(0xd9,	"T0C"),
		(0xda,	"IRM"),
		(0xdb,	"IRC"),
		(0xdf,	"STKP"),
		(0xe0,	"P0UR"),
		(0xe1,	"P1UR"),
		(0xe5,	"P5UR"),
		(0xe6,	"@HL"),
		(0xe7,	"@YZ"),
		(0xe8,	"IRD"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8FMD25 = SN8Chip("SN8FMD25",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8FMD25L = SN8Chip("SN8FMD25L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8FMD24 = SN8Chip("SN8FMD24",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8FMD24L = SN8Chip("SN8FMD24L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8FMD21 = SN8Chip("SN8FMD21",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8FMD21L = SN8Chip("SN8FMD21L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8FMD22 = SN8Chip("SN8FMD22",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8FMD22L = SN8Chip("SN8FMD22L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8FMD23 = SN8Chip("SN8FMD23",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8FMD23L = SN8Chip("SN8FMD23L",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8FMD25A = SN8Chip("SN8FMD25A",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xd3,	"CM0M3"),
		(0xd4,	"CM0M4"),
		(0xd5,	"CM0M5"),
		(0xd6,	"CM0M6"),
		(0xd7,	"CM0M7"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8FMD25AL = SN8Chip("SN8FMD25AL",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xd3,	"CM0M3"),
		(0xd4,	"CM0M4"),
		(0xd5,	"CM0M5"),
		(0xd6,	"CM0M6"),
		(0xd7,	"CM0M7"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8FMD24A = SN8Chip("SN8FMD24A",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xd3,	"CM0M3"),
		(0xd4,	"CM0M4"),
		(0xd5,	"CM0M5"),
		(0xd6,	"CM0M6"),
		(0xd7,	"CM0M7"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8FMD24AL = SN8Chip("SN8FMD24AL",
		dict((
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI_None_None",	0x0F00,	0x00FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0100,	SN8Opcode("TS0M_BX_RD_None",	0x0100,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x3C00,	SN8Opcode("CALLHL_None_None",	0x3C00,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x3B00,	SN8Opcode("DEC_BX_RD_None",	0x3B00,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC_None_None",	0x0D00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP_None_None",	0x0000,	0x00FF)),
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x0500,	SN8Opcode("COMM_BX_RW_None",	0x0500,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x3E00,	SN8Opcode("DECM_BX_RW_None",	0x3E00,	0x00FF)),
		(0x3900,	SN8Opcode("INC_BX_RD_None",	0x3900,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x3A00,	SN8Opcode("INCM_BX_RW_None",	0x3A00,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x3D00,	SN8Opcode("CALLYZ_None_None",	0x3D00,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0400,	SN8Opcode("COM_BX_RD_None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x3F00,	SN8Opcode("RETLW_CONST_None",	0x3F00,	0x00FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET_None_None",	0x0E00,	0x00FF)),
		(0x0C00,	SN8Opcode("DAA_None_None",	0x0C00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF))
		)), dict((
		(0x80,	"L"),
		(0x81,	"H"),
		(0x82,	"R"),
		(0x83,	"Z"),
		(0x84,	"Y"),
		(0x85,	"X"),
		(0x86,	"PFLAG"),
		(0x87,	"RBANK"),
		(0x88,	"W0"),
		(0x89,	"W1"),
		(0x8a,	"W2"),
		(0x8b,	"W3"),
		(0x8c,	"W4"),
		(0x8d,	"W5"),
		(0x8e,	"W6"),
		(0x8f,	"W7"),
		(0x90,	"@HL"),
		(0x91,	"@YZ"),
		(0x92,	"P2OC"),
		(0x93,	"PCL"),
		(0x94,	"PCH"),
		(0x95,	"OSCM"),
		(0x96,	"WDTR"),
		(0x97,	"INTRQ0"),
		(0x98,	"INTRQ1"),
		(0x99,	"P1W"),
		(0x9a,	"INTEN0"),
		(0x9b,	"INTEN1"),
		(0x9c,	"CM0M"),
		(0x9d,	"CM0M1"),
		(0x9e,	"CM0M2"),
		(0x9f,	"PEDGE"),
		(0xa0,	"P0M"),
		(0xa1,	"P1M"),
		(0xa2,	"P2M"),
		(0xa3,	"P3M"),
		(0xa4,	"P4M"),
		(0xa5,	"P5M"),
		(0xa6,	"P0"),
		(0xa7,	"P1"),
		(0xa8,	"P2"),
		(0xa9,	"P3"),
		(0xaa,	"P4"),
		(0xab,	"P5"),
		(0xac,	"P0UR"),
		(0xad,	"P1UR"),
		(0xae,	"P2UR"),
		(0xaf,	"P3UR"),
		(0xb0,	"P4UR"),
		(0xb1,	"P5UR"),
		(0xb2,	"T0M"),
		(0xb3,	"T0C"),
		(0xb4,	"TC0M"),
		(0xb5,	"TC0C"),
		(0xb6,	"TC0R"),
		(0xb7,	"TC0D"),
		(0xb8,	"TC1M"),
		(0xb9,	"TC1C"),
		(0xba,	"TC1R"),
		(0xbb,	"TC1D"),
		(0xbc,	"TC2M"),
		(0xbd,	"TC2C"),
		(0xbe,	"TC2R"),
		(0xbf,	"TC2D"),
		(0xc0,	"T1M"),
		(0xc1,	"T1CL"),
		(0xc2,	"T1CH"),
		(0xc4,	"T1VCL"),
		(0xc5,	"T1VCH"),
		(0xd3,	"CM0M3"),
		(0xd4,	"CM0M4"),
		(0xd5,	"CM0M5"),
		(0xd6,	"CM0M6"),
		(0xd7,	"CM0M7"),
		(0xdb,	"PECMD"),
		(0xdc,	"PEROML"),
		(0xdd,	"PEROMH"),
		(0xde,	"PERAML"),
		(0xdf,	"PERAMCNT"),
		(0xe0,	"SIOM"),
		(0xe1,	"SIOR"),
		(0xe2,	"SIOB"),
		(0xe4,	"URTX"),
		(0xe5,	"URRX"),
		(0xe6,	"URCR"),
		(0xe7,	"UTXD"),
		(0xe8,	"URXD"),
		(0xea,	"MSPSTAT"),
		(0xeb,	"MSPM1"),
		(0xec,	"MSPM2"),
		(0xed,	"MSPBUF"),
		(0xee,	"MSPADR"),
		(0xef,	"STKP"),
		(0xf0,	"STK7L"),
		(0xf1,	"STK7H"),
		(0xf2,	"STK6L"),
		(0xf3,	"STK6H"),
		(0xf4,	"STK5L"),
		(0xf5,	"STK5H"),
		(0xf6,	"STK4L"),
		(0xf7,	"STK4H"),
		(0xf8,	"STK3L"),
		(0xf9,	"STK3H"),
		(0xfa,	"STK2L"),
		(0xfb,	"STK2H"),
		(0xfc,	"STK1L"),
		(0xfd,	"STK1H"),
		(0xfe,	"STK0L"),
		(0xff,	"STK0H")
		))
)

SN8P26U42 = SN8Chip("SN8P26U42",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET__None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH__None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP__None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI__None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP__None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC__None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		))
)

SN8P26U44 = SN8Chip("SN8P26U44",
		dict((
		(0x6800,	SN8Opcode("B0BSET_BIT0_RW_None",	0x6800,	0x07FF)),
		(0x2500,	SN8Opcode("DECS_BX_RD_None",	0x2500,	0x00FF)),
		(0x1700,	SN8Opcode("SWAP_BX_RD_None",	0x1700,	0x00FF)),
		(0x1500,	SN8Opcode("INCS_BX_RD_None",	0x1500,	0x00FF)),
		(0x7000,	SN8Opcode("B0BTS0_BIT0_RD_None",	0x7000,	0x07FF)),
		(0x7800,	SN8Opcode("B0BTS1_BIT0_RD_None",	0x7800,	0x07FF)),
		(0x2000,	SN8Opcode("SBC_A_BX_RD",	0x2000,	0x00FF)),
		(0x2100,	SN8Opcode("SBC_BX_RW_A",	0x2100,	0x00FF)),
		(0x0800,	SN8Opcode("RRC_BX_RD_None",	0x0800,	0x00FF)),
		(0x0E00,	SN8Opcode("RET__None",	0x0E00,	0x00FF)),
		(0x8000,	SN8Opcode("JMP_ADR_ABS_None",	0x8000,	0x3FFF)),
		(0x0400,	SN8Opcode("PUSH__None",	0x0400,	0x00FF)),
		(0xC000,	SN8Opcode("CALL_ADR_ABS_None",	0xC000,	0x3FFF)),
		(0x2800,	SN8Opcode("AND_A_BX_RD",	0x2800,	0x00FF)),
		(0x2900,	SN8Opcode("AND_BX_RW_A",	0x2900,	0x00FF)),
		(0x2A00,	SN8Opcode("AND_A_CONST",	0x2A00,	0x00FF)),
		(0x0500,	SN8Opcode("POP__None",	0x0500,	0x00FF)),
		(0x4800,	SN8Opcode("BSET_BITX_RW_None",	0x4800,	0x07FF)),
		(0x6000,	SN8Opcode("B0BCLR_BIT0_RW_None",	0x6000,	0x07FF)),
		(0x0900,	SN8Opcode("RRCM_BX_RW_None",	0x0900,	0x00FF)),
		(0x1E00,	SN8Opcode("MOV_A_BX_RD",	0x1E00,	0x00FF)),
		(0x1F00,	SN8Opcode("MOV_BX_WR_A",	0x1F00,	0x00FF)),
		(0x2D00,	SN8Opcode("MOV_A_CONST",	0x2D00,	0x00FF)),
		(0x0B00,	SN8Opcode("RLCM_BX_RW_None",	0x0B00,	0x00FF)),
		(0x2E00,	SN8Opcode("B0MOV_A_B0_RD",	0x2E00,	0x00FF)),
		(0x2F00,	SN8Opcode("B0MOV_B0_WR_A",	0x2F00,	0x00FF)),
		(0x3000,	SN8Opcode("B0MOV_U87_CONST",	0x3000,	0x07FF)),
		(0x2F80,	SN8Opcode("B0MOV_U87_A",	0x2F80,	0x00FF)),
		(0x1000,	SN8Opcode("ADC_A_BX_RD",	0x1000,	0x00FF)),
		(0x1100,	SN8Opcode("ADC_BX_RW_A",	0x1100,	0x00FF)),
		(0x1200,	SN8Opcode("ADD_A_BX_RD",	0x1200,	0x00FF)),
		(0x1300,	SN8Opcode("ADD_BX_RW_A",	0x1300,	0x00FF)),
		(0x1400,	SN8Opcode("ADD_A_CONST",	0x1400,	0x00FF)),
		(0x5000,	SN8Opcode("BTS0_BITX_RD_None",	0x5000,	0x07FF)),
		(0x5800,	SN8Opcode("BTS1_BITX_RD_None",	0x5800,	0x07FF)),
		(0x0300,	SN8Opcode("B0ADD_B0_RW_A",	0x0300,	0x00FF)),
		(0x0F00,	SN8Opcode("RETI__None",	0x0F00,	0x00FF)),
		(0x0A00,	SN8Opcode("RLC_BX_RD_None",	0x0A00,	0x00FF)),
		(0x0000,	SN8Opcode("NOP__None",	0x0000,	0x00FF)),
		(0x4000,	SN8Opcode("BCLR_BITX_RW_None",	0x4000,	0x07FF)),
		(0x2200,	SN8Opcode("SUB_A_BX_RD",	0x2200,	0x00FF)),
		(0x2300,	SN8Opcode("SUB_BX_RW_A",	0x2300,	0x00FF)),
		(0x2400,	SN8Opcode("SUB_A_CONST",	0x2400,	0x00FF)),
		(0x1600,	SN8Opcode("INCMS_BX_RW_None",	0x1600,	0x00FF)),
		(0x1800,	SN8Opcode("OR_A_BX_RD",	0x1800,	0x00FF)),
		(0x1900,	SN8Opcode("OR_BX_RW_A",	0x1900,	0x00FF)),
		(0x1A00,	SN8Opcode("OR_A_CONST",	0x1A00,	0x00FF)),
		(0x0600,	SN8Opcode("CMPRS_A_CONST",	0x0600,	0x00FF)),
		(0x0700,	SN8Opcode("CMPRS_A_BX_RD",	0x0700,	0x00FF)),
		(0x0D00,	SN8Opcode("MOVC__None",	0x0D00,	0x00FF)),
		(0x3800,	SN8Opcode("MUL_A_BX_RD",	0x3800,	0x00FF)),
		(0x2B00,	SN8Opcode("CLR_BX_WR_None",	0x2B00,	0x00FF)),
		(0x2C00,	SN8Opcode("XCH_A_BX_RW",	0x2C00,	0x00FF)),
		(0x2600,	SN8Opcode("DECMS_BX_RW_None",	0x2600,	0x00FF)),
		(0x0200,	SN8Opcode("B0XCH_A_B0_RW",	0x0200,	0x00FF)),
		(0x1B00,	SN8Opcode("XOR_A_BX_RD",	0x1B00,	0x00FF)),
		(0x1C00,	SN8Opcode("XOR_BX_RW_A",	0x1C00,	0x00FF)),
		(0x1D00,	SN8Opcode("XOR_A_CONST",	0x1D00,	0x00FF)),
		(0x2700,	SN8Opcode("SWAPM_BX_RW_None",	0x2700,	0x00FF))
		)), dict((
		))
)

SN8CHIPS = dict((
("SN8P1702A", 	SN8P1702A),
("SN8P1703A", 	SN8P1703A),
("SN8P1819A", 	SN8P1819A),
("SN8P1829", 	SN8P1829),
("SN8P1917", 	SN8P1917),
("SN8P1919", 	SN8P1919),
("SN8P1927", 	SN8P1927),
("SN8P1929", 	SN8P1929),
("SN8P1937", 	SN8P1937),
("SN8P1989", 	SN8P1989),
("SN8P1927A", 	SN8P1927A),
("SN8P2212", 	SN8P2212),
("SN8P2213", 	SN8P2213),
("SN8P2233", 	SN8P2233),
("SN8P2234", 	SN8P2234),
("SN8P2236", 	SN8P2236),
("SN8P2238", 	SN8P2238),
("SN8P22121", 	SN8P22121),
("SN8P2267", 	SN8P2267),
("SN8P2242", 	SN8P2242),
("SN8P22421", 	SN8P22421),
("SN8P2241", 	SN8P2241),
("SN8P2267C", 	SN8P2267C),
("SZK671", 	SZK671),
("SN8P2267E", 	SN8P2267E),
("SZK671A", 	SZK671A),
("SN8F22521B", 	SN8F22521B),
("SN8F2253B", 	SN8F2253B),
("SN8F2255B", 	SN8F2255B),
("SN8F2251B", 	SN8F2251B),
("SN8F22531B", 	SN8F22531B),
("SN8F22511B", 	SN8F22511B),
("SN8F2271B", 	SN8F2271B),
("SN8F22721B", 	SN8F22721B),
("SN8F22711B", 	SN8F22711B),
("SN8F2277B", 	SN8F2277B),
("SN8F2288", 	SN8F2288),
("SN8F2283", 	SN8F2283),
("SN8F22831", 	SN8F22831),
("SN8F22E88B", 	SN8F22E88B),
("SN8F22E83B", 	SN8F22E83B),
("SN8F22E84B", 	SN8F22E84B),
("SN8F22E87B", 	SN8F22E87B),
("SN8F22E93", 	SN8F22E93),
("SN8P2308", 	SN8P2308),
("SN8P2318", 	SN8P2318),
("SN8P2317", 	SN8P2317),
("SN8P2501B", 	SN8P2501B),
("SN8P2522", 	SN8P2522),
("SN8P2501B1", 	SN8P2501B1),
("SN8P2501C", 	SN8P2501C),
("SN8P2523", 	SN8P2523),
("SN8P25231", 	SN8P25231),
("SN8P2524", 	SN8P2524),
("SN8P2511", 	SN8P2511),
("SN8P2501D", 	SN8P2501D),
("SN8F25E28", 	SN8F25E28),
("SN8F25E28L", 	SN8F25E28L),
("SN8F25E25", 	SN8F25E25),
("SN8F25E25L", 	SN8F25E25L),
("SN8F25E24", 	SN8F25E24),
("SN8F25E24L", 	SN8F25E24L),
("SN8F25E27", 	SN8F25E27),
("SN8F25E27L", 	SN8F25E27L),
("SN8P2602B", 	SN8P2602B),
("SN8P2604A", 	SN8P2604A),
("SN8P2608", 	SN8P2608),
("SN8P2611", 	SN8P2611),
("SN8P2612", 	SN8P2612),
("SN8P2613", 	SN8P2613),
("SN8P2614", 	SN8P2614),
("SN8A2617", 	SN8A2617),
("SN8P2624", 	SN8P2624),
("SN8P26L321", 	SN8P26L321),
("SN8P26L32", 	SN8P26L32),
("SN8P26L34", 	SN8P26L34),
("SN8P26L38", 	SN8P26L38),
("SN8P26042A", 	SN8P26042A),
("SN8P2602C", 	SN8P2602C),
("SN8P26L31", 	SN8P26L31),
("SN8P26L37", 	SN8P26L37),
("SN8P2623", 	SN8P2623),
("SN8F26E61", 	SN8F26E61),
("SN8F26E61L", 	SN8F26E61L),
("SN8F26E611", 	SN8F26E611),
("SN8F26E611L", 	SN8F26E611L),
("SN8F26E65", 	SN8F26E65),
("SN8F26E65L", 	SN8F26E65L),
("SN8F26E64", 	SN8F26E64),
("SN8F26E64L", 	SN8F26E64L),
("SN8F26E68", 	SN8F26E68),
("SN8F26E68L", 	SN8F26E68L),
("SN8F26E67", 	SN8F26E67),
("SN8F26E67L", 	SN8F26E67L),
("SN8F26E681", 	SN8F26E681),
("SN8F26E681L", 	SN8F26E681L),
("SN8P2704A", 	SN8P2704A),
("SN8P2705A", 	SN8P2705A),
("SN8P2706A", 	SN8P2706A),
("SN8P2707A", 	SN8P2707A),
("SN8P2708A", 	SN8P2708A),
("SN8P2711", 	SN8P2711),
("SN8P2714", 	SN8P2714),
("SN8P27142", 	SN8P27142),
("SN8P27143", 	SN8P27143),
("SN8P2715", 	SN8P2715),
("SN8P2722", 	SN8P2722),
("SN8P2711A", 	SN8P2711A),
("SN8P2735", 	SN8P2735),
("SN8P2758", 	SN8P2758),
("SN8P2732", 	SN8P2732),
("SN8P2733", 	SN8P2733),
("SN8P2734", 	SN8P2734),
("SN8P2754", 	SN8P2754),
("SN8P2755", 	SN8P2755),
("SN8P2742", 	SN8P2742),
("SN8P2743", 	SN8P2743),
("SN8P2712", 	SN8P2712),
("SN8P27411", 	SN8P27411),
("SN8P2708B", 	SN8P2708B),
("SN8P2704B", 	SN8P2704B),
("SN8P2711B", 	SN8P2711B),
("SN8P2711A2", 	SN8P2711A2),
("SN8P27122", 	SN8P27122),
("SN8P2723", 	SN8P2723),
("SN8P2722A", 	SN8P2722A),
("SN8P2741A", 	SN8P2741A),
("SN8P27411A", 	SN8P27411A),
("SN8P27412A", 	SN8P27412A),
("SN8P27L11B", 	SN8P27L11B),
("SN8P2761", 	SN8P2761),
("SN8F27E65", 	SN8F27E65),
("SN8F27E65L", 	SN8F27E65L),
("SN8F27E62", 	SN8F27E62),
("SN8F27E62L", 	SN8F27E62L),
("SN8F27E64", 	SN8F27E64),
("SN8F27E64L", 	SN8F27E64L),
("SN8F27E93", 	SN8F27E93),
("SN8F27E93L", 	SN8F27E93L),
("SN8F27E94", 	SN8F27E94),
("SN8F27E94L", 	SN8F27E94L),
("SN8F27E61", 	SN8F27E61),
("SN8F27E61L", 	SN8F27E61L),
("SN8F27E611", 	SN8F27E611),
("SN8F27E611L", 	SN8F27E611L),
("SN8F27E23", 	SN8F27E23),
("SN8F27E23L", 	SN8F27E23L),
("SN8P2808", 	SN8P2808),
("SN8P2807", 	SN8P2807),
("SN8P2839", 	SN8P2839),
("SN8P2947", 	SN8P2947),
("SN8P2949", 	SN8P2949),
("SN8P2929", 	SN8P2929),
("SN8P2967", 	SN8P2967),
("SN8P2962", 	SN8P2962),
("SN8P2977", 	SN8P2977),
("SN8F29E39", 	SN8F29E39),
("SN8F29E38", 	SN8F29E38),
("SN8F27E65EN", 	SN8F27E65EN),
("SN8F27E65LEN", 	SN8F27E65LEN),
("SN8F27E61EN", 	SN8F27E61EN),
("SN8F27E61LEN", 	SN8F27E61LEN),
("SN8F27E64EN", 	SN8F27E64EN),
("SN8F27E64LEN", 	SN8F27E64LEN),
("SN8F27E611EN", 	SN8F27E611EN),
("SN8F27E611LEN", 	SN8F27E611LEN),
("SN8F26E61EN", 	SN8F26E61EN),
("SN8F26E61LEN", 	SN8F26E61LEN),
("SN8F26E65EN", 	SN8F26E65EN),
("SN8F26E65LEN", 	SN8F26E65LEN),
("SN8F26E68EN", 	SN8F26E68EN),
("SN8F26E68LEN", 	SN8F26E68LEN),
("SN8F26E611EN", 	SN8F26E611EN),
("SN8F26E611LEN", 	SN8F26E611LEN),
("SN8F26E681EN", 	SN8F26E681EN),
("SN8F26E681LEN", 	SN8F26E681LEN),
("SN8DW100", 	SN8DW100),
("SN8PC22", 	SN8PC22),
("SN8PC20", 	SN8PC20),
("SN8PC2014", 	SN8PC2014),
("SN8PC2016", 	SN8PC2016),
("SN8PC21A", 	SN8PC21A),
("SN8FMD25", 	SN8FMD25),
("SN8FMD25L", 	SN8FMD25L),
("SN8FMD24", 	SN8FMD24),
("SN8FMD24L", 	SN8FMD24L),
("SN8FMD21", 	SN8FMD21),
("SN8FMD21L", 	SN8FMD21L),
("SN8FMD22", 	SN8FMD22),
("SN8FMD22L", 	SN8FMD22L),
("SN8FMD23", 	SN8FMD23),
("SN8FMD23L", 	SN8FMD23L),
("SN8FMD25A", 	SN8FMD25A),
("SN8FMD25AL", 	SN8FMD25AL),
("SN8FMD24A", 	SN8FMD24A),
("SN8FMD24AL", 	SN8FMD24AL),
("SN8P26U42", 	SN8P26U42),
("SN8P26U44", 	SN8P26U44)
))

